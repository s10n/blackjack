{"version":3,"sources":["components/Card.module.scss","components/Hand.module.scss","components/ButtonGroup.module.scss","components/Button.module.scss","rules/deck.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/chips.js","test.js","store.js","localStorage.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/check.js","constants.js","redux/actions.js","rules/getStatus.js","components/Table.js","containers/Help.js","components/Player.js","components/Box.js","components/Card.js","components/Hand.js","containers/Hand.js","containers/Player.js","styles/colors.js","components/Button.js","components/ButtonGroup.js","containers/Actions.js","containers/Chips.js","containers/Controls.js","containers/Game.js","serviceWorker.js","index.js","components/Table.module.scss","components/Player.module.scss","components/Box.module.scss"],"names":["module","exports","card","back","deck","status","group","button","reduce","accumulator","currentValue","Object","toConsumableArray","concat","Array","from","length","_","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","createReducer","reducerFunction","reducerName","state","action","player","undefined","combineReducers","hand","arguments","type","stake","dealer","primary","replica","isPlaying","slice","players","chips","amount","game","shuffledDeck","testDeck","hasAce","split","das","autoStay","dealerBust","dealerBlackjack","blackjack","blackjackWin","blackjackDraw","blackjackAfterSplit","dealerBustAfterBlackjackAfterSplit","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducer","subscribe","stringify","setItem","saveState","getState","getDefaultValue","Number","getTotals","sum","includes","getResult","playerKey","byPlayer","_ref","isNotBlackjack","1","2","checkIsNotBlackjack","bust","surrender","byDealer","playerTotal","max","apply","dealerTotal","compare","prize","BLACKJACK","WIN","DRAW","SURRENDER","LOSE","getTotalReturn","coin","result","getReturn","isInit","getCurrentPlayer","_ref2","check","_ref3","hasReplica","_ref4","every","n","filter","_ref5","_ref6","_ref7","some","BET","startGame","dispatch","forEach","draw","resetGame","bet","win","_getState4","watchPlayer","set","double","_players$primary","totals","is21","isBust","isBlackjack","isStay","getStatus","Table","actions","controls","react_default","a","createElement","className","style","table","classNames","duplicated","footer","HELP","LINK","href","label","fontSize","fontWeight","lineHeight","textAlign","title","marginTop","textDecoration","marginLeft","Help","header","description","map","text","index","key","target","rel","Player","isDealer","active","small","Box","children","onClick","box","content","Card","Hand","canDraw","components_Card","connect","_players$playerKey","join","sep","Boolean","bindActionCreators","containers_Hand","components_Box","colors","Button","color","rest","objectWithoutProperties","assign","COLORS","ButtonGroup","buttons","components_Button","disabled","String","canWithdraw","withdraw","containers_Player","containers_Help","Actions","containers_Chips","Controls","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","Game","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13b23931.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUn6\",\"back\":\"Card_back__4pROr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"Hand_deck__XyDBj\",\"status\":\"Hand_status__2R6kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"ButtonGroup_group__dsw-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3pS3v\"};","const deck = ['A', 2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K']\nconst reducer = (accumulator, currentValue) => [\n  ...accumulator,\n  ...Array.from({ length: 4 }, _ => currentValue)\n]\n\nexport default deck.reduce(reducer, [])\n","import deck from './deck'\nimport shuffle from './shuffle'\nexport default () => shuffle(deck)\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'stay':\n    case 'bust':\n    case 'blackjack':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst isPlaying = (state = false, action) => {\n  switch (action.type) {\n    case 'start':\n      return true\n\n    case 'reset':\n      return false\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ isPlaying })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport chips from './chips'\nimport game from './game'\n\nexport default combineReducers({ deck, players, chips, game })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","export default (state = 100, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    default:\n      return state\n  }\n}\n","import getShuffledDeck from './rules/getShuffledDeck'\nconst shuffledDeck = getShuffledDeck()\n\nconst testCase = ''\nconst testDeck = {\n  hasAce: ['A'], // A로 시작\n  split: ['A', 'A'], // 스플릿으로 시작\n  das: [8, 8, 6, 3, 2], // [SP, D] 스플릿 후 더블\n  autoStay: [9, 5, 7, 7], // [H] 21이므로 자동으로 멈춰야 함\n  dealerBust: ['K', 'K', 'K', '6', 'Q'], // [S] 딜러가 버스트되면서 플레이어가 이겨야 함\n  dealerBlackjack: [9, 5, 'A', 7, 'K'], // [H] 서로 21이지만 딜러가 이겨야 함\n  blackjack: ['A', 'K', 6], // [] 블랙잭으로 즉시 이겨야 함\n  blackjackWin: ['A', 'K', 'A', 2], // [] 블랙잭이지만 딜러가 1장 뽑은 후 이겨야 함\n  blackjackDraw: ['A', 'K', 'K', 'A'], // [] 블랙잭이지만 비겨야 함\n  blackjackAfterSplit: ['A', 'A', 'A', 'K', 'K', 9], // [SP, H, H] 스플릿 후 모두 블랙잭\n  dealerBustAfterBlackjackAfterSplit: ['A', 'A', 'J', 9, 'A', 'Q', 3, 10] // [SP, H, H, H] 두 번째 플레이어가 블랙잭으로 이겨야 함\n}\n\nexport default () =>\n  testDeck[testCase]\n    ? { deck: [...testDeck[testCase], ...shuffledDeck] }\n    : undefined\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\nimport { saveState, loadState } from './localStorage'\nimport testState from './test'\n\nconst persistedState = testState() || loadState()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(reducer, persistedState, enhancer)\nstore.subscribe(() => saveState(store.getState()))\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    return JSON.parse(serializedState) || undefined\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {}\n}\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\nimport getDefaultValue from './getDefaultValue'\n\nexport const getResult = (players, playerKey) => {\n  const compare = () => {\n    const playerTotal = Math.max(...getTotals(player.hand))\n    const dealerTotal = Math.max(...getTotals(dealer.hand))\n    return playerTotal > dealerTotal\n      ? 'WIN'\n      : dealerTotal > playerTotal\n      ? 'LOSE'\n      : 'DRAW'\n  }\n\n  const checkIsNotBlackjack = ({ hand }) => {\n    const isNotBlackjack = {\n      1: ![1, 10].includes(getDefaultValue(dealer.hand[0])),\n      2: dealer.status !== 'blackjack'\n    }[hand.length]\n    return typeof isNotBlackjack === 'boolean' ? isNotBlackjack : true\n  }\n\n  const { dealer } = players\n  const player = players[playerKey]\n\n  const byPlayer = {\n    blackjack: checkIsNotBlackjack(dealer) && 'BLACKJACK',\n    bust: 'LOSE',\n    surrender: 'SURRENDER'\n  }\n\n  const byDealer = {\n    blackjack: player.status === 'blackjack' ? 'DRAW' : 'LOSE',\n    bust: 'WIN'\n  }\n\n  return (\n    byPlayer[player.status] ||\n    byDealer[dealer.status] ||\n    (dealer.status === 'stay' ? compare() : '')\n  )\n}\n\nconst prize = { BLACKJACK: 2.5, WIN: 2, DRAW: 1, SURRENDER: 0.5, LOSE: 0 }\nexport const getReturn = (players, playerKey) => {\n  const result = getResult(players, playerKey)\n  return players[playerKey].stake * (prize[result] || 0)\n}\n\nexport const getTotalReturn = players => {\n  const reducer = (coin, playerKey) => coin + getReturn(players, playerKey)\n  return ['primary', 'replica'].reduce(reducer, 0)\n}\n\nexport default getResult\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nexport const isInit = ({ hand, status }) => hand.length === 2 && !status\nexport const getCurrentPlayer = ({ primary, replica }) =>\n  !!replica.hand.length && !!primary.status ? 'replica' : 'primary'\n\nexport default {\n  canSplit: ({ players, chips }) => {\n    const { primary, replica } = players\n    const hasReplica = !!replica.hand.length\n    return (\n      isInit(primary) &&\n      chips >= primary.stake &&\n      primary.hand[0] === primary.hand[1] &&\n      !hasReplica\n    )\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) => {\n    const { status, hand } = dealer\n    return (\n      !status &&\n      getTotals(hand).every(n => n <= 16) &&\n      [primary, replica]\n        .filter(({ hand }) => hand.length)\n        .every(({ status }) => status)\n    )\n  },\n\n  shouldDealerStay: ({ dealer }) =>\n    !dealer.status && getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: players =>\n    ['primary', 'replica']\n      .filter(playerKey => players[playerKey].hand.length)\n      .every(playerKey => getResult(players, playerKey))\n}\n","export const MIN = 5\nexport const BET = [5, 10, 25, 50, 100]\n","import getStatus from '../rules/getStatus'\nimport { getTotalReturn } from '../rules/getResult'\nimport { MIN } from '../constants'\n\n/* Game */\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const resetGame = () => (dispatch, getState) => {\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n}\n\n/* Bet */\nexport const bet = (playerKey, stake = MIN) => (dispatch, getState) => {\n  const { chips } = getState()\n  const isValid = chips >= stake\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n\nexport const win = amount => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'win', amount: amount || getTotalReturn(players) })\n}\n\n/* Player */\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watchPlayer(playerKey))\n}\n\nexport const set = (playerKey, status) => (dispatch, getState) => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const double = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch(bet(playerKey, players[playerKey].stake))\n  dispatch(set(playerKey, 'stay'))\n  dispatch(draw(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\n/* Watch */\nconst watchPlayer = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const status = getStatus(players, playerKey)\n  status && dispatch(set(playerKey, status))\n}\n","import check from '../rules/check'\nimport getTotals from './getTotals'\n\nexport default (players, playerKey) => {\n  const { hand } = players[playerKey]\n  const totals = getTotals(hand)\n  const is21 = totals.some(n => n === 21)\n  const isBust = totals.every(n => n > 21)\n  const isBlackjack = is21 && hand.length === 2\n  const isStay = playerKey === 'dealer' && check.shouldDealerStay(players)\n  return is21\n    ? isBlackjack\n      ? 'blackjack'\n      : 'stay'\n    : isBust\n    ? 'bust'\n    : isStay\n    ? 'stay'\n    : ''\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Table.module.scss'\n\nconst Table = ({ dealer, primary, replica, chips, actions, controls }) => (\n  <main className={style.table}>\n    <section className={style.dealer}>{dealer}</section>\n\n    <section className={classNames(style.players, replica && style.duplicated)}>\n      {replica && <section>{replica}</section>}\n      <section>{primary}</section>\n    </section>\n\n    <section className={style.actions}>{actions}</section>\n\n    <footer className={style.footer}>\n      <section className={style.chips}>{chips}</section>\n      <section className={style.controls}>{controls}</section>\n    </footer>\n  </main>\n)\n\nexport default Table\n","import React from 'react'\n\nconst HELP = [\n  '칩을 모두 잃었을 때 칩 상자를 클릭하면, 칩을 100 더 얻습니다.',\n  '딜러의 차례가 되면 아래의 화살표 버튼으로 딜러의 카드를 뽑으십시오.',\n  '스플릿 후 스플릿은 허용되지 않습니다.'\n]\n\nconst LINK = [\n  { href: 'https://instagram.com/simcheolhwan', label: '제작: 심철환' },\n  { href: 'https://github.com/s10n/blackjack', label: '소스코드 보기' }\n]\n\nconst Help = () => (\n  <article style={style}>\n    <header style={style.header}>\n      <h1 style={style.title}>BLACKJACK</h1>\n    </header>\n\n    <ul style={style.description}>\n      {HELP.map((text, index) => (\n        <li key={index}>{text}</li>\n      ))}\n    </ul>\n\n    <footer style={style.footer}>\n      {LINK.map(({ href, label }) => (\n        <a\n          href={href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={style.a}\n          key={label}\n        >\n          {label} ↗︎\n        </a>\n      ))}\n    </footer>\n  </article>\n)\n\nconst style = {\n  fontSize: 10,\n  fontWeight: 'normal',\n  lineHeight: 1.5,\n  textAlign: 'left',\n\n  title: { fontSize: '2em' },\n  footer: { textAlign: 'right', marginTop: 5 },\n  a: { textDecoration: 'none', marginLeft: 5 }\n}\n\nexport default Help\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Player.module.scss'\n\nconst Player = ({ result, hand, bet, actions, isDealer, active, small }) => (\n  <article className={classNames(style.player, active && style.active)}>\n    {!isDealer && (\n      <section className={classNames(style.result, small && style.small)}>\n        {result}\n      </section>\n    )}\n\n    <section className={style.hand}>{hand}</section>\n    {!isDealer && <section className={style.bet}>{bet}</section>}\n  </article>\n)\n\nexport default Player\n","import React from 'react'\nimport style from './Box.module.scss'\n\nconst Box = ({ title, children, onClick }) => (\n  <div className={style.box} onClick={onClick}>\n    {title && <h1 className={style.title}>{title}</h1>}\n    <p className={style.content}>{children}</p>\n  </div>\n)\n\nexport default Box\n","import React from 'react'\nimport style from './Card.module.scss'\n\nconst Card = ({ back, children }) => (\n  <div className={style.card}>\n    <div className={back && style.back}>{children}</div>\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport style from './Hand.module.scss'\n\nconst Hand = ({ hand, status, canDraw }) => (\n  <article>\n    <p className={style.status}>{status}</p>\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <li key={index}>\n          <Card>{card}</Card>\n        </li>\n      ))}\n\n      {canDraw && (\n        <li>\n          <Card back>+</Card>\n        </li>\n      )}\n    </ul>\n  </article>\n)\n\nexport default Hand\n","import { connect } from 'react-redux'\nimport check from '../rules/check'\nimport Hand from '../components/Hand'\nimport getTotals from '../rules/getTotals'\n\nexport default connect(({ players }, { playerKey }) => {\n  const { hand, status } = players[playerKey]\n  return {\n    hand,\n    status: join([join(getTotals(hand), ', '), status]),\n    canDraw:\n      playerKey === 'dealer' &&\n      !check.hasGameFinished(players) &&\n      check.shouldDealerDraw(players)\n  }\n})(Hand)\n\n/* utils */\nconst join = (array, sep = ' ') => array.filter(Boolean).join(sep)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport getResult from '../rules/getResult'\nimport Player from '../components/Player'\nimport Box from '../components/Box'\nimport Hand from './Hand'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { bet }, { playerKey }) => {\n    const { stake } = players[playerKey]\n    const isDealer = playerKey === 'dealer'\n    const onBoxClick = () => !game.isPlaying && bet(playerKey, -1 * stake)\n    return {\n      result: getResult(players, playerKey),\n      hand: <Hand playerKey={playerKey} />,\n      bet: <Box onClick={onBoxClick}>{stake}</Box>,\n      isDealer,\n      small: !!players['replica'].hand.length,\n      active:\n        isDealer ||\n        getCurrentPlayer(players) === playerKey ||\n        !!players['replica'].status\n    }\n  }\n)(Player)\n","export default {\n  aqua: '#7fdbff',\n  blue: '#0074d9',\n  lime: '#01ff70',\n  navy: '#001f3f',\n  teal: '#39cccc',\n  olive: '#3d9970',\n  green: '#2ecc40',\n  red: '#ff4136',\n  maroon: '#85144b',\n  orange: '#ff851b',\n  purple: '#b10dc9',\n  yellow: '#ffdc00',\n  fuchsia: '#f012be',\n  gray: '#aaaaaa',\n  white: '#ffffff',\n  black: '#111111',\n  silver: '#dddddd'\n}\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button className={style.button} style={{ color }} {...rest}>\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport colors from '../styles/colors'\nimport style from './ButtonGroup.module.scss'\nimport Button from './Button'\n\nconst COLORS = [\n  colors['teal'],\n  colors['orange'],\n  colors['olive'],\n  colors['maroon'],\n  colors['blue']\n]\n\nconst ButtonGroup = ({ buttons }) => (\n  <ul className={style.group}>\n    {buttons.map((button, index) => (\n      <li key={index}>\n        <Button color={COLORS[index]} {...button} />\n      </li>\n    ))}\n  </ul>\n)\n\nexport default ButtonGroup\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check, { isInit } from '../rules/check'\nimport { BET } from '../constants'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  (\n    { players, chips, game },\n    { bet, startGame, draw, set, double, split },\n    { playerKey }\n  ) => {\n    const player = players[playerKey]\n    const actions = game.isPlaying\n      ? [\n          {\n            children: 'SU',\n            disabled: !(isInit(player) && !players['replica'].hand.length),\n            onClick: () => set(playerKey, 'surrender')\n          },\n          {\n            children: 'SP',\n            disabled: !check.canSplit({ players, chips }),\n            onClick: () => split()\n          },\n          {\n            children: 'D',\n            disabled: !(isInit(player) && chips >= player.stake),\n            onClick: () => double(playerKey)\n          },\n          {\n            children: 'S',\n            disabled: !!player.status,\n            onClick: () => set(playerKey, 'stay')\n          },\n          {\n            children: 'H',\n            disabled: !!player.status,\n            onClick: () => draw(playerKey)\n          }\n        ]\n      : BET.map(n => ({\n          children: String(n),\n          disabled: chips < n,\n          onClick: () => bet(playerKey, n)\n        }))\n    return { buttons: actions }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { MIN } from '../constants'\nimport Box from '../components/Box'\n\nconst Chips = ({ chips, withdraw }) => (\n  <Box onClick={withdraw}>{String(chips)}</Box>\n)\n\nexport default connect(\n  ({ chips, players, game }) => ({\n    chips,\n    canWithdraw: !game.isPlaying && chips + players['primary'].stake < MIN\n  }),\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ chips, canWithdraw }, { win }) => ({\n    chips,\n    withdraw: canWithdraw ? () => win(100) : undefined\n  })\n)(Chips)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport colors from '../styles/colors'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => {\n    const { primary } = players\n    const finishGame = () => {\n      win()\n      resetGame()\n    }\n\n    const controls = game.isPlaying\n      ? check.hasGameFinished(players)\n        ? [\n            { color: colors['navy'], children: '✓', onClick: finishGame },\n            { color: colors['navy'], disabled: true, children: '→' }\n          ]\n        : [\n            {\n              color: colors['navy'],\n              children: '→',\n              disabled: !check.shouldDealerDraw(players),\n              onClick: () => draw('dealer')\n            }\n          ]\n      : [\n          {\n            color: colors['navy'],\n            children: '→',\n            disabled: !primary.stake,\n            onClick: startGame\n          }\n        ]\n\n    return { buttons: controls }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport Table from '../components/Table'\nimport Help from './Help'\nimport Player from './Player'\nimport Actions from './Actions'\nimport Chips from './Chips'\nimport Controls from './Controls'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => ({\n    dealer: game.isPlaying ? <Player playerKey=\"dealer\" /> : <Help />,\n    primary: <Player playerKey=\"primary\" />,\n    replica: !!players['replica'].hand.length && <Player playerKey=\"replica\" />,\n    actions: <Actions playerKey={getCurrentPlayer(players)} />,\n    chips: <Chips />,\n    controls: <Controls />\n  })\n)(Table)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './containers/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__35IOq\",\"dealer\":\"Table_dealer__GibhA\",\"players\":\"Table_players__2oEjN\",\"duplicated\":\"Table_duplicated__BfAIy\",\"actions\":\"Table_actions__1P3XS\",\"footer\":\"Table_footer__1yKkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__Mn0zg\",\"hand\":\"Player_hand__3Bbyi\",\"active\":\"Player_active__2i-vG\",\"result\":\"Player_result__19rWb\",\"small\":\"Player_small__2cAvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__1BfmP\"};"],"sourceRoot":""}