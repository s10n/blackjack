{"version":3,"sources":["components/Card.module.scss","components/Hand.module.scss","components/ButtonGroup.module.scss","components/Button.module.scss","components/Number.module.scss","components/Bank.module.scss","rules/getDeck.js","constants.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/chips.js","redux/debt.js","redux/history.js","testStore.js","store.js","localStorage.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/check.js","redux/actions.js","rules/getStatus.js","components/Table.js","containers/Help.js","components/Player.js","components/Box.js","components/Card.js","components/Hand.js","containers/Hand.js","containers/Player.js","styles/colors.js","components/Button.js","components/ButtonGroup.js","containers/Actions.js","components/Number.js","containers/Chips.js","components/Bank.js","containers/Bank.js","containers/Controls.js","containers/Game.js","serviceWorker.js","index.js","components/Table.module.scss","components/Player.module.scss","components/Box.module.scss"],"names":["module","exports","card","back","deck","status","group","button","number","bank","concat","acc","cur","Object","toConsumableArray","BET","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","n","Array","from","reduce","getDeck","arguments","undefined","createReducer","reducerFunction","reducerName","state","action","player","combineReducers","hand","type","stake","dealer","primary","replica","isPlaying","slice","players","chips","amount","debt","game","history","payload","shuffledDeck","testDeck","hasAce","split","das","autoStay","dealerBust","dealerBlackjack","blackjack","blackjackWin","blackjackDraw","blackjackAfterSplit","dealerBustAfterBlackjackAfterSplit","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducer","subscribe","stringify","setItem","saveState","getState","getDefaultValue","Number","getTotals","sum","includes","getResult","playerKey","byPlayer","_ref","isNotBlackjack","1","2","checkIsNotBlackjack","bust","surrender","byDealer","playerTotal","max","apply","dealerTotal","compare","prize","BLACKJACK","WIN","DRAW","SURRENDER","LOSE","getTotalReturn","coin","result","getReturn","isInit","getCurrentPlayer","_ref2","check","_ref3","hasReplica","_ref4","every","filter","_ref5","_ref6","_ref7","some","startGame","dispatch","forEach","draw","resetGame","_getState2","bet","win","lend","payback","_getState5","watchPlayer","set","double","_players$primary","totals","is21","isBust","isBlackjack","isStay","getStatus","Table","props","actions","controls","react_default","a","createElement","className","style","table","classNames","duplicated","footer","capital","HELP","LINK","href","label","fontSize","fontWeight","lineHeight","textAlign","title","marginTop","textDecoration","marginLeft","Help","header","description","map","text","index","key","target","rel","Player","isDealer","active","small","Box","children","onClick","box","clickable","content","Card","Hand","canDraw","components_Card","connect","_players$playerKey","join","sep","Boolean","bindActionCreators","containers_Hand","components_Box","colors","Button","color","rest","objectWithoutProperties","assign","COLORS","ButtonGroup","buttons","components_Button","disabled","String","integer","decimal","canLend","components_Number","Bank","containers_Player","containers_Help","Actions","Chips","containers_Bank","Controls","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","Game","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e025651f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUn6\",\"back\":\"Card_back__4pROr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"Hand_deck__XyDBj\",\"status\":\"Hand_status__2R6kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"ButtonGroup_group__dsw-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3pS3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"Number_number__1m7yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bank\":\"Bank_bank__8O_md\"};","const deck = ['A', 2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K']\nconst concat = (acc, cur) => [...acc, ...cur]\nexport default n => Array.from({ length: n * 4 }, () => deck).reduce(concat, [])\n","export const MIN = 5\nexport const CAPITAL = 100\nexport const BET = [5, 10, 25, 50, 100]\nexport const DECK = 4\n","import getDeck from './getDeck'\nimport shuffle from './shuffle'\nimport { DECK } from '../constants'\nexport default (n = DECK) => shuffle(getDeck(n))\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'stay':\n    case 'bust':\n    case 'blackjack':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst isPlaying = (state = false, action) => {\n  switch (action.type) {\n    case 'start':\n      return true\n\n    case 'reset':\n      return false\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ isPlaying })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport chips from './chips'\nimport debt from './debt'\nimport game from './game'\nimport history from './history'\n\nexport default combineReducers({ deck, players, chips, debt, game, history })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","import { CAPITAL } from '../constants'\n\nexport default (state = CAPITAL, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    case 'lend':\n      return state + CAPITAL\n\n    case 'payback':\n      return state - CAPITAL\n\n    default:\n      return state\n  }\n}\n","import { CAPITAL } from '../constants'\n\nexport default (state = 0, action) => {\n  switch (action.type) {\n    case 'lend':\n      return state + CAPITAL\n\n    case 'payback':\n      return state - CAPITAL\n\n    default:\n      return state\n  }\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'record':\n      return [...state, action.payload]\n\n    default:\n      return state\n  }\n}\n","import getShuffledDeck from './rules/getShuffledDeck'\nconst shuffledDeck = getShuffledDeck()\n\nconst testCase = ''\nconst testDeck = {\n  hasAce: ['A'], // A로 시작\n  split: ['A', 'A'], // 스플릿으로 시작\n  das: [8, 8, 6, 3, 2], // [SP, D] 스플릿 후 더블\n  autoStay: [9, 5, 7, 7], // [H] 21이므로 자동으로 멈춰야 함\n  dealerBust: ['K', 'K', 'K', '6', 'Q'], // [S] 딜러가 버스트되면서 플레이어가 이겨야 함\n  dealerBlackjack: [9, 5, 'A', 7, 'K'], // [H] 서로 21이지만 딜러가 이겨야 함\n  blackjack: ['A', 'K', 6], // [] 블랙잭으로 즉시 이겨야 함\n  blackjackWin: ['A', 'K', 'A', 2], // [] 블랙잭이지만 딜러가 1장 뽑은 후 이겨야 함\n  blackjackDraw: ['A', 'K', 'K', 'A'], // [] 블랙잭이지만 비겨야 함\n  blackjackAfterSplit: ['A', 'A', 'A', 'K', 'K', 9], // [SP, H, H] 스플릿 후 모두 블랙잭\n  dealerBustAfterBlackjackAfterSplit: ['A', 'A', 'J', 9, 'A', 'Q', 3, 10] // [SP, H, H, H] 두 번째 플레이어가 블랙잭으로 이겨야 함\n}\n\nexport default () =>\n  testDeck[testCase]\n    ? { deck: [...testDeck[testCase], ...shuffledDeck] }\n    : undefined\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\nimport { saveState, loadState } from './localStorage'\nimport testState from './testStore'\n\nconst persistedState = testState() || loadState()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(reducer, persistedState, enhancer)\nstore.subscribe(() => saveState(store.getState()))\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    return JSON.parse(serializedState) || undefined\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {}\n}\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\nimport getDefaultValue from './getDefaultValue'\n\nexport const getResult = (players, playerKey) => {\n  const compare = () => {\n    const playerTotal = Math.max(...getTotals(player.hand))\n    const dealerTotal = Math.max(...getTotals(dealer.hand))\n    return playerTotal > dealerTotal\n      ? 'WIN'\n      : dealerTotal > playerTotal\n      ? 'LOSE'\n      : 'DRAW'\n  }\n\n  const checkIsNotBlackjack = ({ hand }) => {\n    const isNotBlackjack = {\n      1: ![1, 10].includes(getDefaultValue(dealer.hand[0])),\n      2: dealer.status !== 'blackjack'\n    }[hand.length]\n    return typeof isNotBlackjack === 'boolean' ? isNotBlackjack : true\n  }\n\n  const { dealer } = players\n  const player = players[playerKey]\n\n  const byPlayer = {\n    blackjack: checkIsNotBlackjack(dealer) && 'BLACKJACK',\n    bust: 'LOSE',\n    surrender: 'SURRENDER'\n  }\n\n  const byDealer = {\n    blackjack: player.status === 'blackjack' ? 'DRAW' : 'LOSE',\n    bust: 'WIN'\n  }\n\n  return (\n    byPlayer[player.status] ||\n    byDealer[dealer.status] ||\n    (dealer.status === 'stay' ? compare() : '')\n  )\n}\n\nconst prize = { BLACKJACK: 2.5, WIN: 2, DRAW: 1, SURRENDER: 0.5, LOSE: 0 }\nexport const getReturn = (players, playerKey) => {\n  const result = getResult(players, playerKey)\n  return players[playerKey].stake * (prize[result] || 0)\n}\n\nexport const getTotalReturn = players => {\n  const reducer = (coin, playerKey) => coin + getReturn(players, playerKey)\n  return ['primary', 'replica'].reduce(reducer, 0)\n}\n\nexport default getResult\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nexport const isInit = ({ hand, status }) => hand.length === 2 && !status\nexport const getCurrentPlayer = ({ primary, replica }) =>\n  !!replica.hand.length && !!primary.status ? 'replica' : 'primary'\n\nexport default {\n  canSplit: ({ players, chips }) => {\n    const { primary, replica } = players\n    const hasReplica = !!replica.hand.length\n    return (\n      isInit(primary) &&\n      chips >= primary.stake &&\n      primary.hand[0] === primary.hand[1] &&\n      !hasReplica\n    )\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) => {\n    const { status, hand } = dealer\n    return (\n      !status &&\n      getTotals(hand).every(n => n <= 16) &&\n      [primary, replica]\n        .filter(({ hand }) => hand.length)\n        .every(({ status }) => status)\n    )\n  },\n\n  shouldDealerStay: ({ dealer }) =>\n    !dealer.status && getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: players =>\n    ['primary', 'replica']\n      .filter(playerKey => players[playerKey].hand.length)\n      .every(playerKey => getResult(players, playerKey))\n}\n","import getStatus from '../rules/getStatus'\nimport { getTotalReturn } from '../rules/getResult'\nimport { MIN } from '../constants'\n\n/* Game */\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const resetGame = () => (dispatch, getState) => {\n  const { players, chips, debt } = getState()\n  dispatch({ type: 'record', payload: { players, chips, debt } })\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n}\n\n/* Bet */\nexport const bet = (playerKey, stake = MIN) => (dispatch, getState) => {\n  const { chips } = getState()\n  const isValid = chips >= stake\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n\nexport const win = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'win', amount: getTotalReturn(players) })\n}\n\nexport const lend = () => ({ type: 'lend' })\nexport const payback = () => ({ type: 'payback' })\n\n/* Player */\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watchPlayer(playerKey))\n}\n\nexport const set = (playerKey, status) => (dispatch, getState) => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const double = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch(bet(playerKey, players[playerKey].stake))\n  dispatch(set(playerKey, 'stay'))\n  dispatch(draw(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\n/* Watch */\nconst watchPlayer = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const status = getStatus(players, playerKey)\n  status && dispatch(set(playerKey, status))\n}\n","import check from '../rules/check'\nimport getTotals from './getTotals'\n\nexport default (players, playerKey) => {\n  const { hand } = players[playerKey]\n  const totals = getTotals(hand)\n  const is21 = totals.some(n => n === 21)\n  const isBust = totals.every(n => n > 21)\n  const isBlackjack = is21 && hand.length === 2\n  const isStay = playerKey === 'dealer' && check.shouldDealerStay(players)\n  return is21\n    ? isBlackjack\n      ? 'blackjack'\n      : 'stay'\n    : isBust\n    ? 'bust'\n    : isStay\n    ? 'stay'\n    : ''\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Table.module.scss'\n\nconst Table = props => {\n  const { dealer, primary, replica, chips, bank, actions, controls } = props\n  return (\n    <main className={style.table}>\n      <section className={style.dealer}>{dealer}</section>\n\n      <section\n        className={classNames(style.players, replica && style.duplicated)}\n      >\n        {replica && <section>{replica}</section>}\n        <section>{primary}</section>\n      </section>\n\n      <section className={style.actions}>{actions}</section>\n\n      <footer className={style.footer}>\n        <section className={style.capital}>\n          {chips}\n          {bank}\n        </section>\n        <section className={style.controls}>{controls}</section>\n      </footer>\n    </main>\n  )\n}\n\nexport default Table\n","import React from 'react'\nimport { CAPITAL } from '../constants'\n\nconst HELP = [\n  '딜러의 차례가 되면 아래의 화살표 버튼으로 딜러의 카드를 뽑으십시오.',\n  `칩을 모두 잃었을 때 칩 상자를 클릭하면, 칩 ${CAPITAL}을 빌립니다.`,\n  '칩이 충분할 때 빚 영역을 누르면 갚을 수 있습니다.',\n  '4개의 덱을 사용하며, 게임을 새로 시작할 때마다 덱을 섞습니다.',\n  '인슈어런스와 스플릿 후 스플릿은 허용되지 않습니다.'\n]\n\nconst LINK = [\n  { href: 'https://instagram.com/simcheolhwan', label: '제작: 심철환' },\n  { href: 'https://github.com/s10n/blackjack', label: '소스코드 보기' }\n]\n\nconst Help = () => (\n  <article style={style}>\n    <header style={style.header}>\n      <h1 style={style.title}>BLACKJACK</h1>\n    </header>\n\n    <ul style={style.description}>\n      {HELP.map((text, index) => (\n        <li key={index}>{text}</li>\n      ))}\n    </ul>\n\n    <footer style={style.footer}>\n      {LINK.map(({ href, label }) => (\n        <a\n          href={href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={style.a}\n          key={label}\n        >\n          {label} ↗︎\n        </a>\n      ))}\n    </footer>\n  </article>\n)\n\nconst style = {\n  fontSize: 10,\n  fontWeight: 'normal',\n  lineHeight: 1.5,\n  textAlign: 'left',\n\n  title: { fontSize: '2em' },\n  footer: { textAlign: 'right', marginTop: 5 },\n  a: { textDecoration: 'none', marginLeft: 5 }\n}\n\nexport default Help\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Player.module.scss'\n\nconst Player = ({ result, hand, bet, actions, isDealer, active, small }) => (\n  <article className={classNames(style.player, active && style.active)}>\n    {!isDealer && (\n      <section className={classNames(style.result, small && style.small)}>\n        {result}\n      </section>\n    )}\n\n    <section className={style.hand}>{hand}</section>\n    {!isDealer && <section className={style.bet}>{bet}</section>}\n  </article>\n)\n\nexport default Player\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Box.module.scss'\n\nconst Box = ({ title, footer, children, onClick }) => (\n  <div\n    className={classNames(style.box, onClick && style.clickable)}\n    onClick={onClick}\n  >\n    <div className={style.content}>{children}</div>\n  </div>\n)\n\nexport default Box\n","import React from 'react'\nimport style from './Card.module.scss'\n\nconst Card = ({ back, children }) => (\n  <div className={style.card}>\n    <div className={back && style.back}>{children}</div>\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport style from './Hand.module.scss'\n\nconst Hand = ({ hand, status, canDraw }) => (\n  <article>\n    <p className={style.status}>{status}</p>\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <li key={index}>\n          <Card>{card}</Card>\n        </li>\n      ))}\n\n      {canDraw && (\n        <li>\n          <Card back>+</Card>\n        </li>\n      )}\n    </ul>\n  </article>\n)\n\nexport default Hand\n","import { connect } from 'react-redux'\nimport check from '../rules/check'\nimport Hand from '../components/Hand'\nimport getTotals from '../rules/getTotals'\n\nexport default connect(({ players }, { playerKey }) => {\n  const { hand, status } = players[playerKey]\n  return {\n    hand,\n    status: join([join(getTotals(hand), ', '), status]),\n    canDraw:\n      playerKey === 'dealer' &&\n      !check.hasGameFinished(players) &&\n      check.shouldDealerDraw(players)\n  }\n})(Hand)\n\n/* utils */\nconst join = (array, sep = ' ') => array.filter(Boolean).join(sep)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport getResult from '../rules/getResult'\nimport Player from '../components/Player'\nimport Box from '../components/Box'\nimport Hand from './Hand'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { bet }, { playerKey }) => {\n    const { stake } = players[playerKey]\n    const isDealer = playerKey === 'dealer'\n    const onBoxClick = () => !game.isPlaying && bet(playerKey, -1 * stake)\n    return {\n      result: getResult(players, playerKey),\n      hand: <Hand playerKey={playerKey} />,\n      bet: <Box onClick={onBoxClick}>{stake}</Box>,\n      isDealer,\n      small: !!players['replica'].hand.length,\n      active:\n        isDealer ||\n        getCurrentPlayer(players) === playerKey ||\n        !!players['replica'].status\n    }\n  }\n)(Player)\n","export default {\n  aqua: '#7fdbff',\n  blue: '#0074d9',\n  lime: '#01ff70',\n  navy: '#001f3f',\n  teal: '#39cccc',\n  olive: '#3d9970',\n  green: '#2ecc40',\n  red: '#ff4136',\n  maroon: '#85144b',\n  orange: '#ff851b',\n  purple: '#b10dc9',\n  yellow: '#ffdc00',\n  fuchsia: '#f012be',\n  gray: '#aaaaaa',\n  white: '#ffffff',\n  black: '#111111',\n  silver: '#dddddd'\n}\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button className={style.button} style={{ color }} {...rest}>\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport colors from '../styles/colors'\nimport style from './ButtonGroup.module.scss'\nimport Button from './Button'\n\nconst COLORS = [\n  colors['teal'],\n  colors['orange'],\n  colors['olive'],\n  colors['maroon'],\n  colors['blue']\n]\n\nconst ButtonGroup = ({ buttons }) => (\n  <ul className={style.group}>\n    {buttons.map((button, index) => (\n      <li key={index}>\n        <Button color={COLORS[index]} {...button} />\n      </li>\n    ))}\n  </ul>\n)\n\nexport default ButtonGroup\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check, { isInit } from '../rules/check'\nimport { BET } from '../constants'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  (\n    { players, chips, game },\n    { bet, startGame, draw, set, double, split },\n    { playerKey }\n  ) => {\n    const player = players[playerKey]\n    const actions = game.isPlaying\n      ? [\n          {\n            children: 'SU',\n            disabled: !(isInit(player) && !players['replica'].hand.length),\n            onClick: () => set(playerKey, 'surrender')\n          },\n          {\n            children: 'SP',\n            disabled: !check.canSplit({ players, chips }),\n            onClick: () => split()\n          },\n          {\n            children: 'D',\n            disabled: !(isInit(player) && chips >= player.stake),\n            onClick: () => double(playerKey)\n          },\n          {\n            children: 'S',\n            disabled: !!player.status,\n            onClick: () => set(playerKey, 'stay')\n          },\n          {\n            children: 'H',\n            disabled: !!player.status,\n            onClick: () => draw(playerKey)\n          }\n        ]\n      : BET.map(n => ({\n          children: String(n),\n          disabled: chips < n,\n          onClick: () => bet(playerKey, n)\n        }))\n    return { buttons: actions }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport style from './Number.module.scss'\n\nconst Number = ({ children }) => {\n  const integer = Math.floor(children)\n  const decimal = children - integer\n\n  return (\n    <div className={style.number}>\n      <span>{String(integer)}</span>\n      {!!decimal && <small>{String(decimal).slice(1)}</small>}\n    </div>\n  )\n}\n\nexport default Number\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { MIN } from '../constants'\nimport Box from '../components/Box'\nimport Number from '../components/Number'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ chips, players, game }, { lend }) => {\n    const canLend = !game.isPlaying && chips + players['primary'].stake < MIN\n    return {\n      children: <Number>{chips}</Number>,\n      onClick: canLend ? () => lend() : undefined\n    }\n  }\n)(Box)\n","import React from 'react'\nimport style from './Bank.module.scss'\n\nconst Bank = ({ debt, onClick }) =>\n  debt ? (\n    <button className={style.bank} disabled={!onClick} onClick={onClick}>\n      DEBT {debt}\n    </button>\n  ) : null\n\nexport default Bank\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { CAPITAL } from '../constants'\nimport Bank from '../components/Bank'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ chips, debt }, { payback }) => ({\n    debt,\n    onClick: !!debt && chips > CAPITAL ? payback : undefined\n  })\n)(Bank)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport colors from '../styles/colors'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => {\n    const { primary } = players\n    const finishGame = () => {\n      win()\n      resetGame()\n    }\n\n    const controls = game.isPlaying\n      ? check.hasGameFinished(players)\n        ? [\n            { color: colors['navy'], children: '✓', onClick: finishGame },\n            { color: colors['navy'], disabled: true, children: '→' }\n          ]\n        : [\n            {\n              color: colors['navy'],\n              children: '→',\n              disabled: !check.shouldDealerDraw(players),\n              onClick: () => draw('dealer')\n            }\n          ]\n      : [\n          {\n            color: colors['navy'],\n            children: '→',\n            disabled: !primary.stake,\n            onClick: startGame\n          }\n        ]\n\n    return { buttons: controls }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport Table from '../components/Table'\nimport Help from './Help'\nimport Player from './Player'\nimport Actions from './Actions'\nimport Chips from './Chips'\nimport Bank from './Bank'\nimport Controls from './Controls'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => ({\n    dealer: game.isPlaying ? <Player playerKey=\"dealer\" /> : <Help />,\n    primary: <Player playerKey=\"primary\" />,\n    replica: !!players['replica'].hand.length && <Player playerKey=\"replica\" />,\n    actions: <Actions playerKey={getCurrentPlayer(players)} />,\n    chips: <Chips />,\n    bank: <Bank />,\n    controls: <Controls />\n  })\n)(Table)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './containers/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__35IOq\",\"dealer\":\"Table_dealer__GibhA\",\"players\":\"Table_players__2oEjN\",\"duplicated\":\"Table_duplicated__BfAIy\",\"actions\":\"Table_actions__1P3XS\",\"footer\":\"Table_footer__1yKkN\",\"capital\":\"Table_capital__1Mggl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__Mn0zg\",\"hand\":\"Player_hand__3Bbyi\",\"active\":\"Player_active__2i-vG\",\"result\":\"Player_result__19rWb\",\"small\":\"Player_small__2cAvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__1BfmP\",\"clickable\":\"Box_clickable__3ffR7\"};"],"sourceRoot":""}