{"version":3,"sources":["components/Card.module.scss","components/Button.module.scss","rules/deck.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/coins.js","store.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/check.js","redux/gameActions.js","rules/getStatus.js","components/Box.js","components/Coins.js","components/Card.js","components/Result.js","components/Button.js","components/Actions.js","components/Hand.js","components/Game.js","serviceWorker.js","index.js","components/Box.module.scss","components/Hand.module.scss"],"names":["module","exports","card","back","button","deck","reduce","accumulator","currentValue","Object","toConsumableArray","concat","Array","from","length","_","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","createReducer","reducerFunction","reducerName","state","action","player","undefined","combineReducers","hand","arguments","type","status","stake","dealer","primary","replica","slice","players","coins","amount","game","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","InitialPlayer","InitialPlayers","objectSpread","createStore","reducer","applyMiddleware","thunk","getDefaultValue","Number","getTotals","sum","includes","getResult","playerKey","byPlayer","blackjack","bust","surrender","byDealer","playerTotal","max","apply","dealerTotal","compare","prize","BLACKJACK","WIN","DRAW","SURRENDER","LOSE","getReturn","result","check","_ref","_ref2","_ref3","_ref5","hasReplica","_ref6","every","n","filter","_ref7","_ref8","_ref9","some","startGame","dispatch","getState","forEach","draw","finishGame","coin","getTotalReturn","resetGame","_getState3","watchPlayer","set","double","bet","split","_players$primary","totals","is21","isBust","isBlackjack","isStay","getStatus","_getState7","nextStake","Box","title","children","react_default","a","createElement","className","style","box","content","connect","components_Box","String","Card","_ref$style","variant","onClick","classNames","color","description","Fragment","fontSize","fontWeight","Button","rest","objectWithoutProperties","assign","backgroundColor","disabled","canReplicaAction","canBet","canMinus","canPlay","canDraw","canSplit","canDouble","canSurrender","bindActionCreators","gameActions","actions","idle","playing","Boolean","map","index","components_Button","key","isDealer","container","order","join","components_Card","components_Result","components_Actions","display","flexDirection","justifyContent","alignItems","height","lineHeight","padding","textAlign","alignSelf","showFinishButton","playersKeys","components_Hand","components_Coins","location","hostname","match","ReactDOM","render","es","store","components_Game","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,mBAAAC,KAAA,wCCAlBH,EAAAC,QAAA,CAAkBG,OAAA,2fCKHC,EANF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAMvDC,OALJ,SAACC,EAAaC,GAAd,OAAAC,OAAAC,EAAA,EAAAD,CACXF,GADWI,OAAAF,OAAAC,EAAA,EAAAD,CAEXG,MAAMC,KAAK,CAAEC,OAAQ,GAAK,SAAAC,GAAC,OAAIP,OAGA,ICJrBQ,EAAA,kBCDA,SAAAC,GAKb,IAJA,IACEC,EACAC,EAFEC,EAAeH,EAAMH,OAIlBM,GACLD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,KACzCF,EAAiBD,EAAMG,GACvBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,EDXYO,CAAQnB,IEFdoB,EAAA,SAACC,EAAiBC,GAAlB,OAAkC,SAACC,EAAOC,GAGvD,OAFmBA,EAAXC,SAEUH,QADqBI,IAAVH,EAGzBF,EAAgBE,EAAOC,GADvBD,ICyCSI,cAAgB,CAAEC,KA3CpB,WAAwB,IAAvBL,EAAuBM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAf,GAAIL,EAAWK,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,EACnC,OAAQF,EAAOM,MACb,IAAK,OACL,IAAK,OACH,OAAON,EAAOI,KAEhB,IAAK,QACH,MAAO,GAET,QACE,OAAOL,IAiC0BQ,OA7BxB,WAAwB,IAAvBR,EAAuBM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAf,GAAIL,EAAWK,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,EACrC,OAAQF,EAAOM,MACb,IAAK,OACL,IAAK,OACL,IAAK,YACL,IAAK,YACH,OAAON,EAAOM,KAEhB,IAAK,QACH,MAAO,GAET,QACE,OAAOP,IAiBkCS,MAbjC,WAAuB,IAAtBT,EAAsBM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAd,EAAGL,EAAWK,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,EACnC,OAAQF,EAAOM,MACb,IAAK,MACH,OAAOP,EAAQC,EAAOQ,MAExB,IAAK,QACH,OAAO,EAET,QACE,OAAOT,MCrCEI,cAAgB,CAC7BM,OAAQb,EAAcK,EAAQ,UAC9BS,QAASd,EAAcK,EAAQ,WAC/BU,QAASf,EAAcK,EAAQ,aCWlBE,cAAgB,CAAEI,OAhBlB,WAA4B,IAA3BR,EAA2BM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAnB,OACtB,QADyCA,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,GAC1BI,MACb,IAAK,QACH,MAAO,UAET,IAAK,OACH,MAAO,OAET,IAAK,QACH,MAAO,OAET,QACE,OAAOP,MCREI,cAAgB,CAAE3B,KCJlB,WAAuC,IAAtCuB,EAAsCM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAA9BlB,IACtB,QADoDkB,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,GACrCI,MACb,IAAK,QACH,OAAOnB,IAET,IAAK,OACH,OAAOY,EAAMa,MAAM,GAErB,QACE,OAAOb,IDL0Bc,UAASC,MENjC,WAAyB,IAAxBf,EAAwBM,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAhB,IAAKL,EAAWK,UAAApB,OAAA,EAAAoB,UAAA,QAAAH,EACtC,OAAQF,EAAOM,MACb,IAAK,MACH,OAAOP,EAAQC,EAAOQ,MAExB,IAAK,MACH,OAAOT,EAAQC,EAAOe,OAExB,QACE,OAAOhB,IFH0CiB,SGFjDC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAgB,CAAEb,MAAO,EAAGJ,KAAM,GAAIG,OAAQ,IAC9Ce,EAAiB,CACrBb,OAAO7B,OAAA2C,EAAA,EAAA3C,CAAA,GAAMyC,EAAP,CAAsBjB,KAAM,KAClCM,QAAQ9B,OAAA2C,EAAA,EAAA3C,CAAA,GAAMyC,EAAP,CAAsBjB,KAAM,MAGtBoB,cACbC,EACA,CAAEjD,UAAM0B,EAAWW,QAASS,GAC5BL,EAAiBS,YAAgBC,OCdpBC,SAAA,SAAAvD,GAAI,OAAIwD,OAAOxD,IAAmB,MAATA,GAAgB,GAAM,KCE/CyD,EAAA,SAAA1B,GACb,IAAM2B,EAAM3B,EAAK3B,OAAO,SAACsD,EAAK1D,GAAN,OAAe0D,EAAMH,EAAgBvD,IAAO,GAEpE,OADe+B,EAAK4B,SAAS,MACZD,EAAM,IAAM,GAAK,CAACA,EAAKA,EAAM,IAAM,CAACA,ICF1CE,EAAY,SAACpB,EAASqB,GACjC,IAUQzB,EAAWI,EAAXJ,OACFR,EAASY,EAAQqB,GAKjBC,EAAW,CACfC,WALgC,CAAC,EAAG,IAAIJ,SACxCJ,EAAgBnB,EAAOL,KAAK,MAIW,YACvCiC,KAAM,OACNC,UAAW,aAGPC,EAAW,CACfH,UAA6B,cAAlBnC,EAAOM,OAAyB,OAAS,OACpD8B,KAAM,OAGR,OACEF,EAASlC,EAAOM,SAChBgC,EAAS9B,EAAOF,UACG,SAAlBE,EAAOF,OA9BM,WACd,IAAMiC,EAAchD,KAAKiD,IAALC,MAAAlD,KAAIZ,OAAAC,EAAA,EAAAD,CAAQkD,EAAU7B,EAAOG,QAC3CuC,EAAcnD,KAAKiD,IAALC,MAAAlD,KAAIZ,OAAAC,EAAA,EAAAD,CAAQkD,EAAUrB,EAAOL,QACjD,OAAOoC,EAAcG,EACjB,MACAA,EAAcH,EACd,OACA,OAuBwBI,GAAY,KAItCC,EAAQ,CAAEC,UAAW,IAAKC,IAAK,EAAGC,KAAM,EAAGC,UAAW,GAAKC,KAAM,GAC1DC,EAAY,SAACtC,EAASqB,GACjC,IAAMkB,EAASnB,EAAUpB,EAASqB,GAClC,OAAOrB,EAAQqB,GAAW1B,OAASqC,EAAMO,IAAW,IAQvCnB,IC9CAoB,EACE,SAAAC,GAAA,OAAAA,EAAG/C,QADL8C,EAEI,SAAAE,GAAA,IAAGnD,EAAHmD,EAAGnD,KAAMG,EAATgD,EAAShD,OAAT,OAAsC,IAAhBH,EAAKnB,SAAiBsB,GAFhD8C,EAGO,SAAAG,GAAA,IAAGpD,EAAHoD,EAAGpD,KAAMG,EAATiD,EAASjD,OAAT,OAAsC,IAAhBH,EAAKnB,SAAiBsB,GAHnD8C,EAMH,SAAAI,GAA0B,IAAvB/C,EAAuB+C,EAAvB/C,QAASC,EAAc8C,EAAd9C,QACZP,EAAiBM,EAAjBN,KAAMG,EAAWG,EAAXH,OACRmD,IAAe/C,EAAQP,KAAKnB,OAClC,OAAuB,IAAhBmB,EAAKnB,QAAgBmB,EAAK,KAAOA,EAAK,KAAOG,IAAWmD,GATpDL,EAYK,SAAAM,GAAkC,IAA/BlD,EAA+BkD,EAA/BlD,OAAQC,EAAuBiD,EAAvBjD,QAASC,EAAcgD,EAAdhD,QAC5BJ,EAAiBE,EAAjBF,OAAQH,EAASK,EAATL,KAChB,OACGG,GACDuB,EAAU1B,GAAMwD,MAAM,SAAAC,GAAC,OAAIA,GAAK,MAChC,CAACnD,EAASC,GACPmD,OAAO,SAAAC,GAAA,OAAAA,EAAG3D,KAAgBnB,SAC1B2E,MAAM,SAAAI,GAAA,OAAAA,EAAGzD,UAnBH8C,EAuBK,SAAAY,GAAA,IAAGxD,EAAHwD,EAAGxD,OAAH,OACfA,EAAOF,QAAUuB,EAAUrB,EAAOL,MAAM8D,KAAK,SAAAL,GAAC,OAAIA,GAAK,MAxB7CR,EA0BI,SAAAxC,GAAO,MACtB,CAAC,UAAW,WACTiD,OAAO,SAAA5B,GAAS,OAAIrB,EAAQqB,GAAW9B,KAAKnB,SAC5C2E,MAAM,SAAA1B,GAAS,OAAID,EAAUpB,EAASqB,MC5BhCiC,EAAY,kBAAM,SAACC,EAAUC,GAAa,IAC7CxD,EAAYwD,IAAZxD,QACRuD,EAAS,CAAE9D,KAAM,UACjBvB,MAAMC,KAAK,CAAEC,OAAQ,EAAI4B,EAAO,QAAYT,KAAKnB,SAAUqF,QAAQ,kBACjEF,EAASG,EAAK,eAEf1D,EAAO,OAAWT,KAAKnB,QAAUmF,EAASG,EAAK,aAGrCC,EAAa,kBAAM,SAACJ,EAAUC,GAEzCD,EAAS,CAAE9D,KAAM,MAAOS,OF6BI,SAAAF,GAE5B,MAAO,CAAC,UAAW,WAAWpC,OADd,SAACgG,EAAMvC,GAAP,OAAqBuC,EAAOtB,EAAUtC,EAASqB,IACjB,GE/BdwC,CADZL,IAAZxD,aAIG8D,EAAY,kBAAM,SAACP,EAAUC,GACxCD,EAAS,CAAE9D,KAAM,QAASL,OAAQ,WAClCmE,EAAS,CAAE9D,KAAM,QAASL,OAAQ,YAClCmE,EAAS,CAAE9D,KAAM,QAASL,OAAQ,cAIvBsE,EAAO,SAAArC,GAAS,OAAI,SAACkC,EAAUC,GAAa,IAAAO,EAC7BP,IAAlB7F,EAD+CoG,EAC/CpG,KACFyB,EAFiD2E,EACzC/D,QACSqB,GACjB7D,EAAOG,EAAK,GACZ4B,EAAIxB,OAAAC,EAAA,EAAAD,CAAOqB,EAAOG,MAAdtB,OAAA,CAAoBT,IAC9B+F,EAAS,CAAE9D,KAAM,OAAQL,OAAQiC,EAAW9B,SAC5CgE,EAASS,EAAY3C,MAGV4C,EAAM,SAAC5C,EAAW3B,GAAZ,OAAuB,SAAC6D,EAAUC,GACnDD,EAAS,CAAE9D,KAAMC,EAAQN,OAAQiC,MAGtB6C,EAAS,SAAA7C,GAAS,OAAI,SAACkC,EAAUC,GAAa,IACjDxD,EAAYwD,IAAZxD,QACRuD,EAASY,EAAI9C,EAAWrB,EAAQqB,GAAW1B,QAC3C4D,EAASU,EAAI5C,EAAW,SACxBkC,EAASG,EAAKrC,MAGH+C,EAAQ,kBAAM,SAACb,EAAUC,GAAa,IAAAa,EAC7Bb,IAAZxD,QACuB,QAAvBT,EAFyC8E,EAEzC9E,KAAMI,EAFmC0E,EAEnC1E,MACRnC,EAAO+B,EAAK,GAClBgE,EAAS,CAAE9D,KAAM,OAAQL,OAAQ,UAAWG,KAAM,CAAC/B,KACnD+F,EAAS,CAAE9D,KAAM,OAAQL,OAAQ,UAAWG,KAAM,CAAC/B,KACnD+F,EAAS,CAAE9D,KAAM,MAAOL,OAAQ,UAAWO,YAIvCqE,EAAc,SAAA3C,GAAS,OAAI,SAACkC,EAAUC,GAAa,IAEjD9D,ECtDO,SAACM,EAASqB,GAAc,IAC7B9B,EAASS,EAAQqB,GAAjB9B,KACF+E,EAASrD,EAAU1B,GACnBgF,EAAOD,EAAOjB,KAAK,SAAAL,GAAC,OAAU,KAANA,IACxBwB,EAASF,EAAOvB,MAAM,SAAAC,GAAC,OAAIA,EAAI,KAC/ByB,EAAcF,GAAwB,IAAhBhF,EAAKnB,OAC3BsG,EAAuB,WAAdrD,GAA0BmB,EAAuBxC,GAChE,OAAOuE,EACHE,EACE,YACA,OACFD,EACA,OACAE,EACA,OACA,GDuCWC,CADKnB,IAAZxD,QAC0BqB,GAClC3B,GAAU6D,EAASU,EAAI5C,EAAW3B,MAIvByE,EAAM,SAAC9C,GAAD,IAAY1B,EAAZH,UAAApB,OAAA,QAAAiB,IAAAG,UAAA,GAAAA,UAAA,GAAoB,EAApB,OAA0B,SAAC+D,EAAUC,GAAa,IAAAoB,EACxCpB,IAAnBxD,EAD2D4E,EAC3D5E,QAASC,EADkD2E,EAClD3E,MACX4E,GAAa7E,EAAQqB,GAAW1B,OAAS,GAAKA,EACpCM,GAASN,GAASkF,GAAa,GACpCtB,EAAS,CAAE9D,KAAM,MAAOL,OAAQiC,EAAW1B,4BExDzCmF,EAPH,SAAArC,GAAA,IAAGsC,EAAHtC,EAAGsC,MAAOC,EAAVvC,EAAUuC,SAAV,OACVC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,KACpBL,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMN,OAAQA,GAC7BE,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAME,SAAUP,KCDnBQ,cAAQ,SAAA9C,GAAA,MAAgB,CAAEzC,MAAlByC,EAAGzC,QAAXuF,CADD,SAAA/C,GAAA,IAAGxC,EAAHwC,EAAGxC,MAAH,OAAegF,EAAAC,EAAAC,cAACM,EAAD,CAAKV,MAAM,gBAAMW,OAAOzF,GAAxB,uECUd0F,GAVF,SAAAlD,GAAA,IAAGhF,EAAHgF,EAAGhF,KAAMuH,EAATvC,EAASuC,SAATY,EAAAnD,EAAmB4C,MAAOQ,OAA1B,IAAAD,EAAoC,GAApCA,EAAwCE,EAAxCrD,EAAwCqD,QAAxC,OACXb,EAAAC,EAAAC,cAAA,OACEC,UAAWW,KAAWV,IAAM7H,KAAMC,GAAQ4H,IAAM5H,MAChD4H,MAAOQ,EACPC,QAASA,GAERd,ICQUQ,eAAQ,SAAA9C,EAAAC,GAAA,IAAG3C,EAAH0C,EAAG1C,QAAaqB,EAAhBsB,EAAgBtB,UAAhB,MAAiC,CACtDkB,OAAQnB,EAAUpB,EAASqB,GAC3BW,MAAOM,EAAUtC,EAASqB,KAFbmE,CAdA,SAAA/C,GAAuB,IAApBF,EAAoBE,EAApBF,OAAQP,EAAYS,EAAZT,MAClBgE,EAAQhE,EAAQ,QAAU,MAC1BiE,EAAcjE,EAAQA,EAAK,+CAAiB,+CAElD,OACEO,GACE0C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACEjB,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEW,QAAOG,SAAU,OAAQC,WAAY,SAAW7D,GAC5D0C,EAAAC,EAAAC,cAAA,SAAIc,kCCCGI,GAVA,SAAA5D,GAAA,IAAGuD,EAAHvD,EAAGuD,MAAOhB,EAAVvC,EAAUuC,SAAasB,EAAvBvI,OAAAwI,GAAA,EAAAxI,CAAA0E,EAAA,6BACbwC,EAAAC,EAAAC,cAAA,SAAApH,OAAAyI,OAAA,CACEpB,UAAWC,KAAM3H,OACjB2H,MAAO,CAAEoB,gBAAiBH,EAAKI,SAAW,SAAWV,IACjDM,GAEHtB,ICoCUQ,eACb,SAAA9C,EAAAC,GAA6C,IAA1C3C,EAA0C0C,EAA1C1C,QAASG,EAAiCuC,EAAjCvC,KAAMF,EAA2ByC,EAA3BzC,MAAWoB,EAAgBsB,EAAhBtB,UACrBjC,EAASY,EAAQqB,GACjBsF,EACU,YAAdtF,KAA6BrB,EAAO,QAAYN,OAElD,MAAO,CACLM,UACAG,OACAR,MAAOP,EAAOO,MACdiH,OAAQ3G,GAAS,EACjB4G,SAAUzH,EAAOO,MAAQ,EACzBmH,UAAW1H,EAAOO,MAClBoH,QAASJ,GAAoBnE,EAAoBpD,GACjD4H,SAAUL,GAAoBnE,EAAexC,GAC7CiH,UAAWN,GAAoBnE,EAAsBpD,GACrD8H,aACEP,IACC3G,EAAO,QAAYT,KAAKnB,QACzBoE,EAAyBpD,KAG/B,SAAAmE,GAAQ,OAAI4D,YAAmBC,EAAa7D,IAtB/BiC,CAtCC,SAAA/C,GAAoDA,EAAjDzC,QAAiD,IAAxCG,EAAwCsC,EAAxCtC,KAAMkB,EAAkCoB,EAAlCpB,UAAqBlC,GAAasD,EAAvB9C,MAAuB5B,OAAAwI,GAAA,EAAAxI,CAAA0E,EAAA,yCAW1DmE,EAA8BzH,EAA9ByH,OAAQC,EAAsB1H,EAAtB0H,SAAUC,EAAY3H,EAAZ2H,QAClBC,EAA+C5H,EAA/C4H,QAASE,EAAsC9H,EAAtC8H,UAAWC,EAA2B/H,EAA3B+H,aACtBG,EACJ,CACEC,KAAM,CACJ,CAAEtB,MAAO,QAAShB,SAAU,IAAK0B,UAAWE,EAAQd,QAf9C,kBAAM3G,EAAOgF,IAAI9C,EAAW,KAgBlC,CAAE2E,MAAO,QAAShB,SAAU,IAAK0B,UAAWG,EAAUf,QAf9C,kBAAM3G,EAAOgF,IAAI9C,GAAY,KAgBrC,CAAE2E,MAAO,OAAQhB,SAAU,SAAK0B,UAAWI,EAAShB,QAfxC,kBAAM3G,EAAOmE,eAiB3BiE,QAAS,CACP,CAAEvB,MAAO,QAAShB,SAAU,IAAK0B,UAAWK,EAASjB,QAhB9C,kBAAM3G,EAAOuE,KAAKrC,KAiBzB,CAAE2E,MAAO,QAAShB,SAAU,IAAK0B,UAAWK,EAASjB,QAhB9C,kBAAM3G,EAAO8E,IAAI5C,EAAW,UAiBnC,CAAE2E,MAAO,OAAQhB,SAAU,IAAK0B,UAAWO,EAAWnB,QAhB7C,kBAAM3G,EAAO+E,OAAO7C,KAKoBlC,EAAb6H,UAYxB,CAAEhB,MAAO,QAAShB,SAAU,KAAMc,QAftC,kBAAM3G,EAAOiF,UAgBrB8C,GAAgB,CAAElB,MAAO,OAAQhB,SAAU,KAAMc,QAjBrC,kBAAM3G,EAAO8E,IAAI5C,EAAW,gBAkBxC4B,OAAOuE,UACTrH,EAAKT,SAAW,GAEpB,OACEuF,EAAAC,EAAAC,cAAA,eACGkC,EAAQI,IAAI,SAACtI,EAAQuI,GAAT,OACXzC,EAAAC,EAAAC,cAACwC,GAAD5J,OAAAyI,OAAA,GAAYrH,EAAZ,CAAoByI,IAAKF,UCYlBlC,eACb,SAAA9C,EAAAC,GAAsC,IAAnC3C,EAAmC0C,EAAnC1C,QAAmBqB,GAAgBqB,EAA1BvC,KAA0BwC,EAAhBtB,WACdjC,EAASY,EAAQqB,GACjBwG,EAAyB,WAAdxG,EACjB,OAAOtD,OAAA2C,EAAA,EAAA3C,CAAA,GACFqB,EADL,CAEEyI,WACAvD,OAAQrD,EAAU7B,EAAOG,MACzBwH,QACEc,IACCrF,EAAsBxC,IACvBwC,EAAuBxC,MAG7B,SAAAuD,GAAQ,OAAI4D,YAAmBC,EAAa7D,IAd/BiC,CAvCF,SAAA/C,GAAA,IACXpB,EADWoB,EACXpB,UACA9B,EAFWkD,EAEXlD,KACAI,EAHW8C,EAGX9C,MACA2E,EAJW7B,EAIX6B,OACA5E,EALW+C,EAKX/C,OACAqH,EANWtE,EAMXsE,QACArD,EAPWjB,EAOXiB,KACAmE,EARWpF,EAQXoF,SARW,OAUX5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMyC,WACpB7C,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAE0C,MAAOF,GAAY,IAAMnI,GAErCuF,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAMf,OAAQe,MAAO,CAAE0C,MAAOF,GAAY,IAC3DvD,EAAOrB,OAAOuE,SAASQ,KAAK,OAG/B/C,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAM1H,MAClB4B,EAAKkI,IAAI,SAACjK,EAAMkK,GAAP,OACRzC,EAAAC,EAAAC,cAAC8C,GAAD,CAAML,IAAKF,GAAQlK,KAGpBuJ,GACC9B,EAAAC,EAAAC,cAAC8C,GAAD,CAAMxK,MAAI,EAACqI,QAAS,kBAAMpC,EAAKrC,KAA/B,OAMFwG,GACA5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACEjB,EAAAC,EAAAC,cAACM,EAAD,CAAKV,MAAM,gBAAMpF,EAAjB,gBACAsF,EAAAC,EAAAC,cAAC+C,GAAD,CAAQ7G,UAAWA,IACnB4D,EAAAC,EAAAC,cAACgD,GAAD,CAAS9G,UAAWA,QCTtBgE,GAAQ,CACZ+C,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,WAAY,SACZC,OAAQ,OACRC,WAAY,IACZC,QAAS,GACTC,UAAW,SAEX3I,QAAS,CACPoI,QAAS,OACTE,eAAgB,eAChBC,WAAY,WACZK,UAAW,YAIApD,eACb,SAAA9C,GAAA,IAAG1C,EAAH0C,EAAG1C,QAAH,MAAwB,CACtB6I,iBAAkC,SADpCnG,EAAYvC,KACaT,QAAqB8C,EAAsBxC,GAClE8I,YAAa,CACX9I,EAAO,QAAYT,KAAKnB,QAAU,UAClC,WACA6E,OAAOuE,WAEX,SAAAjE,GAAQ,OAAI4D,YAAmBC,EAAa7D,IAR/BiC,CA7CF,SAAA/C,GAA8D,IAA3DqG,EAA2DrG,EAA3DqG,YAAaD,EAA8CpG,EAA9CoG,iBAAkBlF,EAA4BlB,EAA5BkB,WAAYG,EAAgBrB,EAAhBqB,UAMzD,OACEmB,EAAAC,EAAAC,cAAA,QAAME,MAAOA,IACXJ,EAAAC,EAAAC,cAAC4D,GAAD,CAAM1H,UAAU,WAEhB4D,EAAAC,EAAAC,cAAA,OAAKE,MAAOyD,EAAY1K,OAAS,EAAIiH,GAAMrF,QAAU,IAClD8I,EAAYrB,IAAI,SAAAG,GAAG,OAClB3C,EAAAC,EAAAC,cAAC4D,GAAD,CAAM1H,UAAWuG,EAAKA,IAAKA,OAI9BiB,GACC5D,EAAAC,EAAAC,cAACwC,GAAD,CAAQ3B,MAAM,OAAOF,QAhBP,WAClBnC,IACAG,MAcI,gBAKFmB,EAAAC,EAAAC,cAAC6D,EAAD,SCnBcxB,QACW,cAA7BnH,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACPpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAUC,MAAOA,GACftE,EAAAC,EAAAC,cAACqE,GAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInB1M,EAAAC,QAAA,CAAkB+H,IAAA,iBAAAP,MAAA,mBAAAQ,QAAA,yCCAlBjI,EAAAC,QAAA,CAAkBuK,UAAA,wBAAAnK,KAAA,mBAAA2G,OAAA","file":"static/js/main.242a3e54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUn6\",\"back\":\"Card_back__4pROr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3pS3v\"};","const deck = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\nconst reducer = (accumulator, currentValue) => [\n  ...accumulator,\n  ...Array.from({ length: 4 }, _ => currentValue)\n]\n\nexport default deck.reduce(reducer, [])\n","import deck from './deck'\nimport shuffle from './shuffle'\nexport default () => shuffle(deck)\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'stay':\n    case 'bust':\n    case 'blackjack':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst status = (state = 'idle', action) => {\n  switch (action.type) {\n    case 'start':\n      return 'playing'\n\n    case 'stop':\n      return 'stop'\n\n    case 'reset':\n      return 'idle'\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ status })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport coins from './coins'\nimport game from './game'\n\nexport default combineReducers({ deck, players, coins, game })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","export default (state = 100, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst InitialPlayer = { stake: 0, hand: [], status: '' }\nconst InitialPlayers = {\n  dealer: { ...InitialPlayer, hand: [] },\n  primary: { ...InitialPlayer, hand: [] }\n}\n\nexport default createStore(\n  reducer,\n  { deck: undefined, players: InitialPlayers },\n  composeEnhancers(applyMiddleware(thunk))\n)\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\nimport getDefaultValue from './getDefaultValue'\n\nexport const getResult = (players, playerKey) => {\n  const compare = () => {\n    const playerTotal = Math.max(...getTotals(player.hand))\n    const dealerTotal = Math.max(...getTotals(dealer.hand))\n    return playerTotal > dealerTotal\n      ? 'WIN'\n      : dealerTotal > playerTotal\n      ? 'LOSE'\n      : 'DRAW'\n  }\n\n  const { dealer } = players\n  const player = players[playerKey]\n  const dealerWillNeverBlackjack = ![1, 10].includes(\n    getDefaultValue(dealer.hand[0])\n  )\n\n  const byPlayer = {\n    blackjack: dealerWillNeverBlackjack && 'BLACKJACK',\n    bust: 'LOSE',\n    surrender: 'SURRENDER'\n  }\n\n  const byDealer = {\n    blackjack: player.status === 'blackjack' ? 'DRAW' : 'LOSE',\n    bust: 'WIN'\n  }\n\n  return (\n    byPlayer[player.status] ||\n    byDealer[dealer.status] ||\n    (dealer.status === 'stay' ? compare() : '')\n  )\n}\n\nconst prize = { BLACKJACK: 2.5, WIN: 2, DRAW: 1, SURRENDER: 0.5, LOSE: 0 }\nexport const getReturn = (players, playerKey) => {\n  const result = getResult(players, playerKey)\n  return players[playerKey].stake * (prize[result] || 0)\n}\n\nexport const getTotalReturn = players => {\n  const reducer = (coin, playerKey) => coin + getReturn(players, playerKey)\n  return ['primary', 'replica'].reduce(reducer, 0)\n}\n\nexport default getResult\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nexport default {\n  canPlayerDraw: ({ status }) => !status,\n  canPlayerDouble: ({ hand, status }) => hand.length === 2 && !status,\n  canPlayerSurrender: ({ hand, status }) => hand.length === 2 && !status,\n  shouldPlayerStay: ({ hand }) => getTotals(hand).some(n => n === 21),\n\n  canSplit: ({ primary, replica }) => {\n    const { hand, status } = primary\n    const hasReplica = !!replica.hand.length\n    return hand.length === 2 && hand[0] === hand[1] && !status && !hasReplica\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) => {\n    const { status, hand } = dealer\n    return (\n      !status &&\n      getTotals(hand).every(n => n <= 16) &&\n      [primary, replica]\n        .filter(({ hand }) => hand.length)\n        .every(({ status }) => status)\n    )\n  },\n\n  shouldDealerStay: ({ dealer }) =>\n    !dealer.status && getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: players =>\n    ['primary', 'replica']\n      .filter(playerKey => players[playerKey].hand.length)\n      .every(playerKey => getResult(players, playerKey))\n}\n","import getStatus from '../rules/getStatus'\nimport { getTotalReturn } from '../rules/getResult'\n\n/* Game */\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const finishGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'win', amount: getTotalReturn(players) })\n}\n\nexport const resetGame = () => (dispatch, getState) => {\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n}\n\n/* Player */\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watchPlayer(playerKey))\n}\n\nexport const set = (playerKey, status) => (dispatch, getState) => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const double = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch(bet(playerKey, players[playerKey].stake))\n  dispatch(set(playerKey, 'stay'))\n  dispatch(draw(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\n/* Watch */\nconst watchPlayer = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const status = getStatus(players, playerKey)\n  status && dispatch(set(playerKey, status))\n}\n\n/* Bet */\nexport const bet = (playerKey, stake = 5) => (dispatch, getState) => {\n  const { players, coins } = getState()\n  const nextStake = (players[playerKey].stake || 0) + stake\n  const isValid = coins >= stake && nextStake >= 5\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n","import check from '../rules/check'\nimport getTotals from './getTotals'\n\nexport default (players, playerKey) => {\n  const { hand } = players[playerKey]\n  const totals = getTotals(hand)\n  const is21 = totals.some(n => n === 21)\n  const isBust = totals.every(n => n > 21)\n  const isBlackjack = is21 && hand.length === 2\n  const isStay = playerKey === 'dealer' && check.shouldDealerStay(players)\n  return is21\n    ? isBlackjack\n      ? 'blackjack'\n      : 'stay'\n    : isBust\n    ? 'bust'\n    : isStay\n    ? 'stay'\n    : ''\n}\n","import React from 'react'\nimport style from './Box.module.scss'\n\nconst Box = ({ title, children }) => (\n  <div className={style.box}>\n    <h1 className={style.title}>{title}</h1>\n    <p className={style.content}>{children}</p>\n  </div>\n)\n\nexport default Box\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Box from './Box'\n\nconst Coins = ({ coins }) => <Box title=\"보유\">{String(coins)}만원</Box>\nexport default connect(({ coins }) => ({ coins }))(Coins)\n","import React from 'react'\nimport style from './Card.module.scss'\nimport classNames from 'classnames'\n\nconst Card = ({ back, children, style: variant = {}, onClick }) => (\n  <div\n    className={classNames(style.card, back && style.back)}\n    style={variant}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport getResult, { getReturn } from '../rules/getResult'\n\nconst Result = ({ result, prize }) => {\n  const color = prize ? 'green' : 'red'\n  const description = prize ? prize + `만원을 받습니다.` : '돈을 잃었습니다.'\n\n  return (\n    result && (\n      <>\n        <p style={{ color, fontSize: '200%', fontWeight: 'bold' }}>{result}</p>\n        <p>{description}</p>\n      </>\n    )\n  )\n}\n\nexport default connect(({ players }, { playerKey }) => ({\n  result: getResult(players, playerKey),\n  prize: getReturn(players, playerKey)\n}))(Result)\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button\n    className={style.button}\n    style={{ backgroundColor: rest.disabled ? 'silver' : color }}\n    {...rest}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as gameActions from '../redux/gameActions'\nimport check from '../rules/check'\nimport Button from './Button'\n\nconst Actions = ({ players, game, playerKey, stake, ...action }) => {\n  const bet = () => action.bet(playerKey, 5)\n  const minus = () => action.bet(playerKey, -5)\n  const startGame = () => action.startGame()\n\n  const draw = () => action.draw(playerKey)\n  const stay = () => action.set(playerKey, 'stay')\n  const double = () => action.double(playerKey)\n  const surrender = () => action.set(playerKey, 'surrender')\n  const split = () => action.split()\n\n  const { canBet, canMinus, canPlay } = action\n  const { canDraw, canDouble, canSurrender, canSplit } = action\n  const actions =\n    {\n      idle: [\n        { color: 'green', children: '+', disabled: !canBet, onClick: bet },\n        { color: 'brown', children: '-', disabled: !canMinus, onClick: minus },\n        { color: 'navy', children: '→', disabled: !canPlay, onClick: startGame }\n      ],\n      playing: [\n        { color: 'green', children: 'H', disabled: !canDraw, onClick: draw },\n        { color: 'brown', children: 'S', disabled: !canDraw, onClick: stay },\n        { color: 'navy', children: 'D', disabled: !canDouble, onClick: double },\n        canSplit && { color: 'olive', children: 'SP', onClick: split },\n        canSurrender && { color: 'teal', children: 'SU', onClick: surrender }\n      ].filter(Boolean)\n    }[game.status] || []\n\n  return (\n    <section>\n      {actions.map((action, index) => (\n        <Button {...action} key={index} />\n      ))}\n    </section>\n  )\n}\n\nexport default connect(\n  ({ players, game, coins }, { playerKey }) => {\n    const player = players[playerKey]\n    const canReplicaAction =\n      playerKey !== 'replica' || !!players['primary'].status\n\n    return {\n      players,\n      game,\n      stake: player.stake,\n      canBet: coins >= 5,\n      canMinus: player.stake > 5,\n      canPlay: !!player.stake,\n      canDraw: canReplicaAction && check.canPlayerDraw(player),\n      canSplit: canReplicaAction && check.canSplit(players),\n      canDouble: canReplicaAction && check.canPlayerDouble(player),\n      canSurrender:\n        canReplicaAction &&\n        !players['replica'].hand.length &&\n        check.canPlayerSurrender(player)\n    }\n  },\n  dispatch => bindActionCreators(gameActions, dispatch)\n)(Actions)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as gameActions from '../redux/gameActions'\nimport check from '../rules/check'\nimport getTotals from '../rules/getTotals'\nimport style from './Hand.module.scss'\nimport Box from './Box'\nimport Card from './Card'\nimport Result from './Result'\nimport Actions from './Actions'\n\nconst Hand = ({\n  playerKey,\n  hand,\n  stake,\n  totals,\n  status,\n  canDraw,\n  draw,\n  isDealer\n}) => (\n  <div className={style.container}>\n    <p style={{ order: isDealer && 2 }}>{status}</p>\n\n    <section className={style.totals} style={{ order: isDealer && 1 }}>\n      {totals.filter(Boolean).join(', ')}\n    </section>\n\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <Card key={index}>{card}</Card>\n      ))}\n\n      {canDraw && (\n        <Card back onClick={() => draw(playerKey)}>\n          +\n        </Card>\n      )}\n    </ul>\n\n    {!isDealer && (\n      <>\n        <Box title=\"베팅\">{stake}만원</Box>\n        <Result playerKey={playerKey} />\n        <Actions playerKey={playerKey} />\n      </>\n    )}\n  </div>\n)\n\nexport default connect(\n  ({ players, game }, { playerKey }) => {\n    const player = players[playerKey]\n    const isDealer = playerKey === 'dealer'\n    return {\n      ...player,\n      isDealer,\n      totals: getTotals(player.hand),\n      canDraw:\n        isDealer &&\n        !check.hasGameFinished(players) &&\n        check.shouldDealerDraw(players)\n    }\n  },\n  dispatch => bindActionCreators(gameActions, dispatch)\n)(Hand)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as gameActions from '../redux/gameActions'\nimport check from '../rules/check'\nimport Coins from './Coins'\nimport Hand from './Hand'\nimport Button from './Button'\n\nconst Game = ({ playersKeys, showFinishButton, finishGame, resetGame }) => {\n  const handleClick = () => {\n    finishGame()\n    resetGame()\n  }\n\n  return (\n    <main style={style}>\n      <Hand playerKey=\"dealer\" />\n\n      <div style={playersKeys.length > 1 ? style.players : {}}>\n        {playersKeys.map(key => (\n          <Hand playerKey={key} key={key} />\n        ))}\n      </div>\n\n      {showFinishButton && (\n        <Button color=\"navy\" onClick={handleClick}>\n          ✔︎\n        </Button>\n      )}\n\n      <Coins />\n    </main>\n  )\n}\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  height: '100%',\n  lineHeight: 1.6,\n  padding: 15,\n  textAlign: 'center',\n\n  players: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'flex-end',\n    alignSelf: 'stretch'\n  }\n}\n\nexport default connect(\n  ({ players, game }) => ({\n    showFinishButton: game.status !== 'idle' && check.hasGameFinished(players),\n    playersKeys: [\n      players['replica'].hand.length && 'replica',\n      'primary'\n    ].filter(Boolean)\n  }),\n  dispatch => bindActionCreators(gameActions, dispatch)\n)(Game)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './components/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__1BfmP\",\"title\":\"Box_title__2gOYC\",\"content\":\"Box_content__3UwtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hand_container__BrGZp\",\"deck\":\"Hand_deck__XyDBj\",\"totals\":\"Hand_totals__z3KUT\"};"],"sourceRoot":""}