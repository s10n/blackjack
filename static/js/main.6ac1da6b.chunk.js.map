{"version":3,"sources":["components/Card.module.scss","components/Hand.module.scss","components/ButtonGroup.module.scss","components/Button.module.scss","components/Number.module.scss","components/Bank.module.scss","components/Table.module.scss","rules/getDeck.js","constants.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/chips.js","redux/debt.js","redux/history.js","testStore.js","store.js","localStorage.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/check.js","redux/actions.js","rules/getStatus.js","components/Table.js","containers/RemoveState.js","containers/Help.js","components/Player.js","components/Box.js","components/Card.js","components/Hand.js","containers/Hand.js","containers/Player.js","styles/colors.js","components/Button.js","components/ButtonGroup.js","containers/Actions.js","components/Number.js","containers/Chips.js","components/Bank.js","containers/Bank.js","containers/Controls.js","containers/Game.js","serviceWorker.js","index.js","components/Player.module.scss","components/Box.module.scss"],"names":["module","exports","card","back","deck","status","group","button","number","bank","table","dealer","players","duplicated","actions","footer","capital","concat","acc","cur","Object","toConsumableArray","BET","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","n","Array","from","reduce","getDeck","arguments","undefined","createReducer","reducerFunction","reducerName","state","action","player","combineReducers","hand","type","stake","primary","replica","isPlaying","slice","chips","amount","debt","game","history","payload","shuffledDeck","testDeck","hasAce","split","das","autoStay","dealerBust","dealerBlackjack","blackjack","blackjackWin","blackjackDraw","blackjackAfterSplit","dealerBustAfterBlackjackAfterSplit","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducer","subscribe","stringify","setItem","saveState","getState","getDefaultValue","Number","getTotals","sum","includes","getResult","playerKey","byPlayer","_ref","isNotBlackjack","1","2","checkIsNotBlackjack","bust","surrender","byDealer","playerTotal","max","apply","dealerTotal","compare","prize","BLACKJACK","WIN","DRAW","SURRENDER","LOSE","getTotalReturn","coin","result","getReturn","isInit","getCurrentPlayer","_ref2","check","_ref3","hasReplica","_ref4","every","filter","_ref5","_ref6","_ref7","some","startGame","dispatch","forEach","draw","resetGame","_getState2","bet","win","lend","payback","_getState5","watchPlayer","set","double","_players$primary","totals","is21","isBust","isBlackjack","isStay","getStatus","Table","props","controls","react_default","a","createElement","className","style","classNames","RemoveState","count","increase","_this","setState","this","removeItem","removeState","hasRemoved","render","Component","HELP","LINK","href","label","fontSize","fontWeight","lineHeight","textAlign","title","marginTop","textDecoration","marginLeft","Help","containers_RemoveState","header","objectSpread","onClick","description","map","text","index","key","target","rel","Player","isDealer","active","small","Box","children","box","clickable","content","Card","Hand","canDraw","components_Card","connect","_players$playerKey","join","sep","Boolean","bindActionCreators","onBoxClick","containers_Hand","components_Box","colors","Button","color","rest","objectWithoutProperties","assign","COLORS","ButtonGroup","buttons","components_Button","disabled","String","integer","decimal","canLend","components_Number","Bank","containers_Player","containers_Help","Actions","Chips","containers_Bank","Controls","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","es","Game","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6ac1da6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUn6\",\"back\":\"Card_back__4pROr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"Hand_deck__XyDBj\",\"status\":\"Hand_status__2R6kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"ButtonGroup_group__dsw-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3pS3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"Number_number__1m7yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bank\":\"Bank_bank__8O_md\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__35IOq\",\"dealer\":\"Table_dealer__GibhA\",\"players\":\"Table_players__2oEjN\",\"duplicated\":\"Table_duplicated__BfAIy\",\"actions\":\"Table_actions__1P3XS\",\"footer\":\"Table_footer__1yKkN\",\"capital\":\"Table_capital__1Mggl\"};","const deck = ['A', 2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K']\nconst concat = (acc, cur) => [...acc, ...cur]\nexport default n => Array.from({ length: n * 4 }, () => deck).reduce(concat, [])\n","export const MIN = 5\nexport const CAPITAL = 100\nexport const BET = [5, 10, 25, 50, 100]\nexport const DECK = 4\n","import getDeck from './getDeck'\nimport shuffle from './shuffle'\nimport { DECK } from '../constants'\nexport default (n = DECK) => shuffle(getDeck(n))\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'stay':\n    case 'bust':\n    case 'blackjack':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst isPlaying = (state = false, action) => {\n  switch (action.type) {\n    case 'start':\n      return true\n\n    case 'reset':\n      return false\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ isPlaying })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport chips from './chips'\nimport debt from './debt'\nimport game from './game'\nimport history from './history'\n\nexport default combineReducers({ deck, players, chips, debt, game, history })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","import { CAPITAL } from '../constants'\n\nexport default (state = CAPITAL, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    case 'lend':\n      return state + CAPITAL\n\n    case 'payback':\n      return state - CAPITAL\n\n    default:\n      return state\n  }\n}\n","import { CAPITAL } from '../constants'\n\nexport default (state = 0, action) => {\n  switch (action.type) {\n    case 'lend':\n      return state + CAPITAL\n\n    case 'payback':\n      return state - CAPITAL\n\n    default:\n      return state\n  }\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'record':\n      return [...state, action.payload]\n\n    default:\n      return state\n  }\n}\n","import getShuffledDeck from './rules/getShuffledDeck'\nconst shuffledDeck = getShuffledDeck()\n\nconst testCase = ''\nconst testDeck = {\n  hasAce: ['A'], // A로 시작\n  split: ['A', 'A'], // 스플릿으로 시작\n  das: [8, 8, 6, 3, 2], // [SP, D] 스플릿 후 더블\n  autoStay: [9, 5, 7, 7], // [H] 21이므로 자동으로 멈춰야 함\n  dealerBust: ['K', 'K', 'K', '6', 'Q'], // [S] 딜러가 버스트되면서 플레이어가 이겨야 함\n  dealerBlackjack: [9, 5, 'A', 7, 'K'], // [H] 서로 21이지만 딜러가 이겨야 함\n  blackjack: ['A', 'K', 6], // [] 블랙잭으로 즉시 이겨야 함\n  blackjackWin: ['A', 'K', 'A', 2], // [] 블랙잭이지만 딜러가 1장 뽑은 후 이겨야 함\n  blackjackDraw: ['A', 'K', 'K', 'A'], // [] 블랙잭이지만 비겨야 함\n  blackjackAfterSplit: ['A', 'A', 'A', 'K', 'K', 9], // [SP, H, H] 스플릿 후 모두 블랙잭\n  dealerBustAfterBlackjackAfterSplit: ['A', 'A', 'J', 9, 'A', 'Q', 3, 10] // [SP, H, H, H] 두 번째 플레이어가 블랙잭으로 이겨야 함\n}\n\nexport default () =>\n  testDeck[testCase]\n    ? { deck: [...testDeck[testCase], ...shuffledDeck] }\n    : undefined\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\nimport { saveState, loadState } from './localStorage'\nimport testState from './testStore'\n\nconst persistedState = testState() || loadState()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(reducer, persistedState, enhancer)\nstore.subscribe(() => saveState(store.getState()))\n\nexport default store\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    return JSON.parse(serializedState) || undefined\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (err) {}\n}\n\nexport const removeState = () => {\n  try {\n    localStorage.removeItem('state')\n  } catch (err) {}\n}\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\nimport getDefaultValue from './getDefaultValue'\n\nexport const getResult = (players, playerKey) => {\n  const compare = () => {\n    const playerTotal = Math.max(...getTotals(player.hand))\n    const dealerTotal = Math.max(...getTotals(dealer.hand))\n    return playerTotal > dealerTotal\n      ? 'WIN'\n      : dealerTotal > playerTotal\n      ? 'LOSE'\n      : 'DRAW'\n  }\n\n  const checkIsNotBlackjack = ({ hand }) => {\n    const isNotBlackjack = {\n      1: ![1, 10].includes(getDefaultValue(dealer.hand[0])),\n      2: dealer.status !== 'blackjack'\n    }[hand.length]\n    return typeof isNotBlackjack === 'boolean' ? isNotBlackjack : true\n  }\n\n  const { dealer } = players\n  const player = players[playerKey]\n\n  const byPlayer = {\n    blackjack: checkIsNotBlackjack(dealer) && 'BLACKJACK',\n    bust: 'LOSE',\n    surrender: 'SURRENDER'\n  }\n\n  const byDealer = {\n    blackjack: player.status === 'blackjack' ? 'DRAW' : 'LOSE',\n    bust: 'WIN'\n  }\n\n  return (\n    byPlayer[player.status] ||\n    byDealer[dealer.status] ||\n    (dealer.status === 'stay' ? compare() : '')\n  )\n}\n\nconst prize = { BLACKJACK: 2.5, WIN: 2, DRAW: 1, SURRENDER: 0.5, LOSE: 0 }\nexport const getReturn = (players, playerKey) => {\n  const result = getResult(players, playerKey)\n  return players[playerKey].stake * (prize[result] || 0)\n}\n\nexport const getTotalReturn = players => {\n  const reducer = (coin, playerKey) => coin + getReturn(players, playerKey)\n  return ['primary', 'replica'].reduce(reducer, 0)\n}\n\nexport default getResult\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nexport const isInit = ({ hand, status }) => hand.length === 2 && !status\nexport const getCurrentPlayer = ({ primary, replica }) =>\n  !!replica.hand.length && !!primary.status ? 'replica' : 'primary'\n\nexport default {\n  canSplit: ({ players, chips }) => {\n    const { primary, replica } = players\n    const hasReplica = !!replica.hand.length\n    return (\n      isInit(primary) &&\n      chips >= primary.stake &&\n      primary.hand[0] === primary.hand[1] &&\n      !hasReplica\n    )\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) => {\n    const { status, hand } = dealer\n    return (\n      !status &&\n      getTotals(hand).every(n => n <= 16) &&\n      [primary, replica]\n        .filter(({ hand }) => hand.length)\n        .every(({ status }) => status)\n    )\n  },\n\n  shouldDealerStay: ({ dealer }) =>\n    !dealer.status && getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: players =>\n    ['primary', 'replica']\n      .filter(playerKey => players[playerKey].hand.length)\n      .every(playerKey => getResult(players, playerKey))\n}\n","import getStatus from '../rules/getStatus'\nimport { getTotalReturn } from '../rules/getResult'\nimport { MIN } from '../constants'\n\n/* Game */\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const resetGame = () => (dispatch, getState) => {\n  const { players, chips, debt } = getState()\n  dispatch({ type: 'record', payload: { players, chips, debt } })\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n}\n\n/* Bet */\nexport const bet = (playerKey, stake = MIN) => (dispatch, getState) => {\n  const { chips } = getState()\n  const isValid = chips >= stake\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n\nexport const win = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'win', amount: getTotalReturn(players) })\n}\n\nexport const lend = () => ({ type: 'lend' })\nexport const payback = () => ({ type: 'payback' })\n\n/* Player */\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watchPlayer(playerKey))\n}\n\nexport const set = (playerKey, status) => (dispatch, getState) => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const double = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch(bet(playerKey, players[playerKey].stake))\n  dispatch(set(playerKey, 'stay'))\n  dispatch(draw(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\n/* Watch */\nconst watchPlayer = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const status = getStatus(players, playerKey)\n  status && dispatch(set(playerKey, status))\n}\n","import check from '../rules/check'\nimport getTotals from './getTotals'\n\nexport default (players, playerKey) => {\n  const { hand } = players[playerKey]\n  const totals = getTotals(hand)\n  const is21 = totals.some(n => n === 21)\n  const isBust = totals.every(n => n > 21)\n  const isBlackjack = is21 && hand.length === 2\n  const isStay = playerKey === 'dealer' && check.shouldDealerStay(players)\n  return is21\n    ? isBlackjack\n      ? 'blackjack'\n      : 'stay'\n    : isBust\n    ? 'bust'\n    : isStay\n    ? 'stay'\n    : ''\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Table.module.scss'\n\nconst Table = props => {\n  const { dealer, primary, replica, chips, bank, actions, controls } = props\n  return (\n    <main className={style.table}>\n      <section className={style.dealer}>{dealer}</section>\n\n      <section\n        className={classNames(style.players, replica && style.duplicated)}\n      >\n        {replica && <section>{replica}</section>}\n        <section>{primary}</section>\n      </section>\n\n      <section className={style.actions}>{actions}</section>\n\n      <footer className={style.footer}>\n        <section className={style.capital}>\n          {chips}\n          {bank}\n        </section>\n        <section className={style.controls}>{controls}</section>\n      </footer>\n    </main>\n  )\n}\n\nexport default Table\n","import { Component } from 'react'\nimport { removeState } from '../localStorage'\n\nconst TRIGGER = 10\nclass RemoveState extends Component {\n  state = { count: 0 }\n\n  componentDidUpdate() {\n    this.state.count === TRIGGER && removeState()\n  }\n\n  increase = () => {\n    this.setState(({ count }) => ({ count: count + 1 }))\n  }\n\n  render() {\n    const hasRemoved = this.state.count >= TRIGGER\n    return this.props.render({\n      hasRemoved,\n      increase: hasRemoved ? undefined : this.increase\n    })\n  }\n}\n\nexport default RemoveState\n","import React from 'react'\nimport { CAPITAL } from '../constants'\nimport RemoveState from './RemoveState'\n\nconst HELP = [\n  '딜러의 차례가 되면 아래의 화살표 버튼으로 딜러의 카드를 뽑으십시오.',\n  `칩을 모두 잃었을 때 칩 상자를 클릭하면, 칩 ${CAPITAL}을 빌립니다.`,\n  '칩이 충분할 때 빚 영역을 누르면 갚을 수 있습니다.',\n  '4개의 덱을 사용하며, 게임을 새로 시작할 때마다 덱을 섞습니다.',\n  '인슈어런스와 스플릿 후 스플릿은 허용되지 않습니다.'\n]\n\nconst LINK = [\n  { href: 'https://instagram.com/simcheolhwan', label: '제작: 심철환' },\n  { href: 'https://github.com/s10n/blackjack', label: '소스코드 보기' }\n]\n\nconst Help = () => (\n  <RemoveState\n    render={({ increase, hasRemoved }) => (\n      <article style={style}>\n        <header style={style.header}>\n          <h1\n            style={{\n              ...style.title,\n              textDecoration: hasRemoved && 'line-through'\n            }}\n            onClick={increase}\n          >\n            BLACKJACK\n          </h1>\n        </header>\n\n        <ul style={style.description}>\n          {HELP.map((text, index) => (\n            <li key={index}>{text}</li>\n          ))}\n        </ul>\n\n        <footer style={style.footer}>\n          {LINK.map(({ href, label }) => (\n            <a\n              href={href}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={style.a}\n              key={label}\n            >\n              {label} ↗︎\n            </a>\n          ))}\n        </footer>\n      </article>\n    )}\n  />\n)\n\nconst style = {\n  fontSize: 10,\n  fontWeight: 'normal',\n  lineHeight: 1.5,\n  textAlign: 'left',\n\n  title: { fontSize: '2em' },\n  footer: { textAlign: 'right', marginTop: 5 },\n  a: { textDecoration: 'none', marginLeft: 5 }\n}\n\nexport default Help\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Player.module.scss'\n\nconst Player = ({ result, hand, bet, actions, isDealer, active, small }) => (\n  <article className={classNames(style.player, active && style.active)}>\n    {!isDealer && (\n      <section className={classNames(style.result, small && style.small)}>\n        {result}\n      </section>\n    )}\n\n    <section className={style.hand}>{hand}</section>\n    {!isDealer && <section className={style.bet}>{bet}</section>}\n  </article>\n)\n\nexport default Player\n","import React from 'react'\nimport classNames from 'classnames'\nimport style from './Box.module.scss'\n\nconst Box = ({ title, footer, children, onClick }) => (\n  <div\n    className={classNames(style.box, onClick && style.clickable)}\n    onClick={onClick}\n  >\n    <div className={style.content}>{children}</div>\n  </div>\n)\n\nexport default Box\n","import React from 'react'\nimport style from './Card.module.scss'\n\nconst Card = ({ back, children }) => (\n  <div className={style.card}>\n    <div className={back && style.back}>{children}</div>\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport style from './Hand.module.scss'\n\nconst Hand = ({ hand, status, canDraw }) => (\n  <article>\n    <p className={style.status}>{status}</p>\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <li key={index}>\n          <Card>{card}</Card>\n        </li>\n      ))}\n\n      {canDraw && (\n        <li>\n          <Card back>+</Card>\n        </li>\n      )}\n    </ul>\n  </article>\n)\n\nexport default Hand\n","import { connect } from 'react-redux'\nimport check from '../rules/check'\nimport Hand from '../components/Hand'\nimport getTotals from '../rules/getTotals'\n\nexport default connect(({ players }, { playerKey }) => {\n  const { hand, status } = players[playerKey]\n  return {\n    hand,\n    status: join([join(getTotals(hand), ', '), status]),\n    canDraw:\n      playerKey === 'dealer' &&\n      !check.hasGameFinished(players) &&\n      check.shouldDealerDraw(players)\n  }\n})(Hand)\n\n/* utils */\nconst join = (array, sep = ' ') => array.filter(Boolean).join(sep)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport getResult from '../rules/getResult'\nimport Player from '../components/Player'\nimport Box from '../components/Box'\nimport Hand from './Hand'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { bet }, { playerKey }) => {\n    const { stake } = players[playerKey]\n    const isDealer = playerKey === 'dealer'\n    const onBoxClick =\n      !!stake && !game.isPlaying ? () => bet(playerKey, -1 * stake) : undefined\n\n    return {\n      result: getResult(players, playerKey),\n      hand: <Hand playerKey={playerKey} />,\n      bet: <Box onClick={onBoxClick}>{stake}</Box>,\n      isDealer,\n      small: !!players['replica'].hand.length,\n      active:\n        isDealer ||\n        getCurrentPlayer(players) === playerKey ||\n        !!players['replica'].status\n    }\n  }\n)(Player)\n","export default {\n  aqua: '#7fdbff',\n  blue: '#0074d9',\n  lime: '#01ff70',\n  navy: '#001f3f',\n  teal: '#39cccc',\n  olive: '#3d9970',\n  green: '#2ecc40',\n  red: '#ff4136',\n  maroon: '#85144b',\n  orange: '#ff851b',\n  purple: '#b10dc9',\n  yellow: '#ffdc00',\n  fuchsia: '#f012be',\n  gray: '#aaaaaa',\n  white: '#ffffff',\n  black: '#111111',\n  silver: '#dddddd'\n}\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button className={style.button} style={{ color }} {...rest}>\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport colors from '../styles/colors'\nimport style from './ButtonGroup.module.scss'\nimport Button from './Button'\n\nconst COLORS = [\n  colors['teal'],\n  colors['orange'],\n  colors['olive'],\n  colors['maroon'],\n  colors['blue']\n]\n\nconst ButtonGroup = ({ buttons }) => (\n  <ul className={style.group}>\n    {buttons.map((button, index) => (\n      <li key={index}>\n        <Button color={COLORS[index]} {...button} />\n      </li>\n    ))}\n  </ul>\n)\n\nexport default ButtonGroup\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check, { isInit } from '../rules/check'\nimport { BET } from '../constants'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  (\n    { players, chips, game },\n    { bet, startGame, draw, set, double, split },\n    { playerKey }\n  ) => {\n    const player = players[playerKey]\n    const actions = game.isPlaying\n      ? [\n          {\n            children: 'SU',\n            disabled: !(isInit(player) && !players['replica'].hand.length),\n            onClick: () => set(playerKey, 'surrender')\n          },\n          {\n            children: 'SP',\n            disabled: !check.canSplit({ players, chips }),\n            onClick: () => split()\n          },\n          {\n            children: 'D',\n            disabled: !(isInit(player) && chips >= player.stake),\n            onClick: () => double(playerKey)\n          },\n          {\n            children: 'S',\n            disabled: !!player.status,\n            onClick: () => set(playerKey, 'stay')\n          },\n          {\n            children: 'H',\n            disabled: !!player.status,\n            onClick: () => draw(playerKey)\n          }\n        ]\n      : BET.map(n => ({\n          children: String(n),\n          disabled: chips < n,\n          onClick: () => bet(playerKey, n)\n        }))\n    return { buttons: actions }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport style from './Number.module.scss'\n\nconst Number = ({ children }) => {\n  const integer = Math.floor(children)\n  const decimal = children - integer\n\n  return (\n    <div className={style.number}>\n      <span>{String(integer)}</span>\n      {!!decimal && <small>{String(decimal).slice(1)}</small>}\n    </div>\n  )\n}\n\nexport default Number\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { MIN } from '../constants'\nimport Box from '../components/Box'\nimport Number from '../components/Number'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ chips, players, game }, { lend }) => {\n    const canLend = !game.isPlaying && chips + players['primary'].stake < MIN\n    return {\n      children: <Number>{chips}</Number>,\n      onClick: canLend ? () => lend() : undefined\n    }\n  }\n)(Box)\n","import React from 'react'\nimport style from './Bank.module.scss'\n\nconst Bank = ({ debt, onClick }) =>\n  debt ? (\n    <button className={style.bank} disabled={!onClick} onClick={onClick}>\n      DEBT {debt}\n    </button>\n  ) : null\n\nexport default Bank\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { CAPITAL } from '../constants'\nimport Bank from '../components/Bank'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ chips, debt }, { payback }) => ({\n    debt,\n    onClick: !!debt && chips > CAPITAL ? payback : undefined\n  })\n)(Bank)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport colors from '../styles/colors'\nimport ButtonGroup from '../components/ButtonGroup'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => {\n    const { primary } = players\n    const finishGame = () => {\n      win()\n      resetGame()\n    }\n\n    const controls = game.isPlaying\n      ? check.hasGameFinished(players)\n        ? [\n            { color: colors['navy'], children: '✓', onClick: finishGame },\n            { color: colors['navy'], disabled: true, children: '→' }\n          ]\n        : [\n            {\n              color: colors['navy'],\n              children: '→',\n              disabled: !check.shouldDealerDraw(players),\n              onClick: () => draw('dealer')\n            }\n          ]\n      : [\n          {\n            color: colors['navy'],\n            children: '→',\n            disabled: !primary.stake,\n            onClick: startGame\n          }\n        ]\n\n    return { buttons: controls }\n  }\n)(ButtonGroup)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport { getCurrentPlayer } from '../rules/check'\nimport Table from '../components/Table'\nimport Help from './Help'\nimport Player from './Player'\nimport Actions from './Actions'\nimport Chips from './Chips'\nimport Bank from './Bank'\nimport Controls from './Controls'\n\nexport default connect(\n  state => state,\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ players, game }, { startGame, resetGame, win, draw }) => ({\n    dealer: game.isPlaying ? <Player playerKey=\"dealer\" /> : <Help />,\n    primary: <Player playerKey=\"primary\" />,\n    replica: !!players['replica'].hand.length && <Player playerKey=\"replica\" />,\n    actions: <Actions playerKey={getCurrentPlayer(players)} />,\n    chips: <Chips />,\n    bank: <Bank />,\n    controls: <Controls />\n  })\n)(Table)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './containers/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__Mn0zg\",\"hand\":\"Player_hand__3Bbyi\",\"active\":\"Player_active__2i-vG\",\"result\":\"Player_result__19rWb\",\"small\":\"Player_small__2cAvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__1BfmP\",\"clickable\":\"Box_clickable__3ffR7\"};"],"sourceRoot":""}