{"version":3,"sources":["components/Button.module.scss","utils/deck.js","utils/getShuffledDeck.js","utils/shuffle.js","utils/getDefaultValue.js","utils/getTotals.js","utils/getResult.js","utils/getGameResult.js","utils/rules.js","components/Card.js","components/Deck.js","components/Button.js","components/Actions.js","components/Hand.js","components/App.js","serviceWorker.js","index.js","components/Hand.module.scss","components/Card.module.scss"],"names":["module","exports","button","deck","reduce","accumulator","currentValue","Object","toConsumableArray","concat","Array","from","length","_","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","getDefaultValue","card","Number","getTotals","hand","sum","includes","isBlackjack","some","n","getResult","isBust","every","getGameResult","_ref","player","dealer","WIN","DRAW","LOSE","playerTotals","playerResult","dealerTotals","dealerResult","byPlayer","blackjack","bust","byDealer","isFinite","state","playerTotal","max","apply","dealerTotal","compare","NaN","rules","_ref2","_ref3","_ref4","players","_ref5","_ref6","_ref7","Card","back","children","_ref$style","style","variant","onClick","react_default","a","createElement","className","classNames","Deck","hidden","display","alignItems","map","index","padding","key","height","backgroundColor","components_Card","Button","color","rest","objectWithoutProperties","assign","disabled","Actions","actions","action","components_Button","Hand","draw","isDealer","gameResult","container","order","Rules","totals","join","components_Actions","InitialPlayer","flexDirection","justifyContent","App","_useState","useState","_useState2","slicedToArray","game","setGame","_useState3","_useState4","setDeck","_useState5","_useState6","setDealer","_useState7","_useState8","setPlayers","gameState","useEffect","init","setDealerState","forEach","setPlayerState","nextDeck","setPlayerHand","setDealerHand","fn","cards","slice","drawPlayer","objectSpread","set","split","components_Deck","components_Hand","canDraw","props","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af84af5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3pS3v\"};","const deck = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\nconst reducer = (accumulator, currentValue) => [\n  ...accumulator,\n  ...Array.from({ length: 4 }, _ => currentValue)\n]\n\nexport default deck.reduce(reducer, [])\n","import deck from './deck'\nimport shuffle from './shuffle'\nexport default () => shuffle(deck)\n","/* Fisherâ€“Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\n\nexport const isBlackjack = hand =>\n  hand.length === 2 && getTotals(hand).some(n => n === 21)\n\nexport default hand => {\n  const totals = getTotals(hand)\n  const isBust = totals.every(n => n > 21)\n  return isBlackjack(hand) ? 'blackjack' : isBust ? 'bust' : ''\n}\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nexport default ({ player, dealer }) => {\n  const compare = () => {\n    const playerTotal = Math.max(...playerTotals)\n    const dealerTotal = Math.max(...dealerTotals)\n    return playerTotal > dealerTotal\n      ? WIN\n      : dealerTotal < playerTotal\n      ? DRAW\n      : LOSE\n  }\n\n  const WIN = 2\n  const BLACKJACK = 1.5\n  const DRAW = 1\n  const SURRENDER = 0.5\n  const LOSE = 0\n\n  const playerTotals = getTotals(player.hand)\n  const playerResult = getResult(player.hand)\n  const dealerTotals = getTotals(dealer.hand)\n  const dealerResult = getResult(dealer.hand)\n  const isDealerNotBlackjack =\n    dealer.hand[0] !== 'A' ||\n    (dealer.hand.length === 2 && dealerResult !== 'blackjack')\n\n  const byPlayer = { blackjack: isDealerNotBlackjack && BLACKJACK, bust: LOSE }\n  const byDealer = { blackjack: LOSE, bust: WIN }\n\n  return Number.isFinite(byPlayer[playerResult])\n    ? byPlayer[playerResult]\n    : Number.isFinite(byDealer[dealerResult])\n    ? byDealer[dealerResult]\n    : dealer.state === 'stay'\n    ? compare()\n    : player.state === 'surrender'\n    ? SURRENDER\n    : NaN\n}\n","import getTotals from './getTotals'\nimport getResult, { isBlackjack } from './getResult'\nimport getGameResult from './getGameResult'\n\nexport default {\n  getTotals,\n  getResult,\n  isBlackjack,\n  getGameResult,\n\n  canPlayerDraw: ({ hand, state }) => !getResult(hand) && !state,\n  canPlayerSurrender: ({ hand, state }) => hand.length === 2 && !state,\n  shouldPlayerStay: ({ hand }) => isBlackjack(hand),\n\n  canSplit: ({ players }) =>\n    players[0].hand.length === 2 &&\n    players[0].hand[0] === players[0].hand[1] &&\n    !players[0].state &&\n    players.length === 1,\n\n  shouldDealerDraw: ({ dealer, players }) =>\n    players.every(({ state }) => state === 'stay') &&\n    getTotals(dealer.hand).every(n => n <= 16) &&\n    dealer.state !== 'stay',\n\n  shouldDealerStay: ({ dealer, players }) =>\n    getTotals(dealer.hand).some(n => n >= 17) ||\n    players.every(player => Number.isFinite(getGameResult({ player, dealer })))\n}\n","import React from 'react'\nimport style from './Card.module.scss'\nimport classNames from 'classnames'\n\nconst Card = ({ back, children, style: variant = {}, onClick }) => (\n  <div\n    className={classNames(style.card, back && style.back)}\n    style={variant}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport getDefaultValue from '../utils/getDefaultValue'\nimport Card from './Card'\n\nconst Deck = ({ deck, hidden }) =>\n  hidden ? null : (\n    <ul style={{ display: 'flex', alignItems: 'flex-end' }}>\n      {deck.map((card, index) => (\n        <div style={{ padding: 1 }} key={index}>\n          <div\n            style={{\n              height: getDefaultValue(card) * 5,\n              backgroundColor: 'silver'\n            }}\n          />\n          <Card>{card}</Card>\n        </div>\n      ))}\n    </ul>\n  )\n\nexport default Deck\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button\n    className={style.button}\n    style={{ backgroundColor: rest.disabled ? 'silver' : color }}\n    {...rest}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport Button from './Button'\n\nconst Actions = ({ actions }) => (\n  <section>\n    {actions.map(\n      (action, index) => action && <Button {...action} key={index} />\n    )}\n  </section>\n)\n\nexport default Actions\n","import React from 'react'\nimport Rules from '../utils/rules'\nimport style from './Hand.module.scss'\nimport Card from './Card'\nimport Actions from './Actions'\n\nconst Hand = ({ hand, draw, actions, isDealer, gameResult }) => (\n  <div className={style.container}>\n    <p style={{ order: isDealer && 2 }}>{Rules.getResult(hand)}</p>\n\n    <section className={style.totals} style={{ order: isDealer && 1 }}>\n      {Rules.getTotals(hand).join(', ')}\n    </section>\n\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <Card key={index}>{card}</Card>\n      ))}\n\n      {draw && (\n        <Card back onClick={draw}>\n          +\n        </Card>\n      )}\n    </ul>\n\n    <p>&times;{Number.isFinite(gameResult) && gameResult}</p>\n    {actions && <Actions actions={actions} />}\n  </div>\n)\n\nexport default Hand\n","import React, { useState, useEffect } from 'react'\nimport { set } from 'dot-prop-immutable'\nimport getShuffledDeck from '../utils/getShuffledDeck'\nimport Rules from '../utils/rules'\nimport Deck from './Deck'\nimport Hand from './Hand'\n\nconst InitialPlayer = { hand: [], state: '' }\nconst App = () => {\n  const [game, setGame] = useState([])\n  const [deck, setDeck] = useState(getShuffledDeck())\n  const [dealer, setDealer] = useState(InitialPlayer)\n  const [players, setPlayers] = useState([InitialPlayer])\n  const gameState = { players, dealer }\n\n  useEffect(\n    () => {\n      const isReady = players[0].hand.length === 2 && dealer.hand.length === 1\n      !isReady && init()\n    },\n    [game]\n  )\n\n  useEffect(\n    () => {\n      Rules.shouldDealerStay(gameState) && setDealerState('stay')\n      players.forEach(\n        (player, index) =>\n          Rules.shouldPlayerStay(player) && setPlayerState(index)('stay')\n      )\n    },\n    [players, dealer]\n  )\n\n  const init = () => {\n    const nextDeck = draw(\n      2 - players[0].hand.length,\n      deck,\n      players[0].hand,\n      setPlayerHand(0)\n    )\n    draw(1 - dealer.hand.length, nextDeck, dealer.hand, setDealerHand)\n  }\n\n  const reset = () => {\n    setDeck(getShuffledDeck())\n    setDealer(InitialPlayer)\n    setPlayers([InitialPlayer])\n    setGame([...game, 0])\n  }\n\n  const draw = (n, deck, hand, fn) => {\n    const cards = deck.slice(0, n)\n    const nextDeck = deck.slice(n)\n    fn([...hand, ...cards])\n    setDeck(nextDeck)\n    return nextDeck\n  }\n\n  const drawDealer = () => {\n    draw(1, deck, dealer.hand, setDealerHand)\n  }\n\n  const drawPlayer = index => {\n    draw(1, deck, players[index].hand, setPlayerHand(index))\n  }\n\n  const setDealerHand = hand => {\n    setDealer({ ...dealer, hand })\n  }\n\n  const setDealerState = state => {\n    setDealer({ ...dealer, state })\n  }\n\n  const setPlayerHand = index => hand => {\n    setPlayers(set(players, `${index}.hand`, hand))\n  }\n\n  const setPlayerState = index => state => {\n    setPlayers(set(players, `${index}.state`, state))\n  }\n\n  const split = () => {\n    const card = players[0].hand[0]\n    const player = { hand: [card], state: '' }\n    setPlayers([player, player])\n  }\n\n  const renderPlayerHand = (player, index) => {\n    const draw = () => drawPlayer(index)\n    const canDraw =\n      Rules.canPlayerDraw(player) &&\n      (!index ||\n        Number.isFinite(\n          Rules.getGameResult({ player: players[index - 1], dealer })\n        ))\n\n    const props = {\n      ...player,\n      gameResult: Rules.getGameResult({ player, dealer }),\n      actions: [\n        {\n          color: 'green',\n          children: 'H',\n          disabled: !canDraw,\n          onClick: draw\n        },\n        {\n          color: 'brown',\n          children: 'S',\n          disabled: !canDraw,\n          onClick: () => setPlayerState(index)('stay')\n        },\n        {\n          color: 'blue',\n          children: 'D',\n          disabled: !canDraw,\n          onClick: draw\n        },\n        {\n          color: 'gray',\n          children: 'SU',\n          disabled: !(players.length === 1 && Rules.canPlayerSurrender(player)),\n          onClick: () => setPlayerState(index)('surrender')\n        },\n        Rules.canSplit(gameState) && {\n          color: 'chocolate',\n          children: 'SP',\n          onClick: split\n        }\n      ]\n    }\n\n    return <Hand {...props} key={index} />\n  }\n\n  return (\n    <main style={style}>\n      <Deck deck={deck} hidden />\n\n      <Hand\n        {...dealer}\n        draw={Rules.shouldDealerDraw(gameState) && drawDealer}\n        isDealer\n      />\n\n      {players.map(renderPlayerHand)}\n      <button onClick={reset}>New Game</button>\n    </main>\n  )\n}\n\nconst style = {\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  padding: 15\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hand_container__BrGZp\",\"deck\":\"Hand_deck__XyDBj\",\"totals\":\"Hand_totals__z3KUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2SUn6\",\"back\":\"Card_back__4pROr\"};"],"sourceRoot":""}