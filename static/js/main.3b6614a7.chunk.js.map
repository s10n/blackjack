{"version":3,"sources":["components/Card.module.scss","components/Button.module.scss","rules/deck.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/coins.js","store.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/getGameResult.js","rules/check.js","redux/gameActions.js","components/Coins.js","components/Card.js","components/Button.js","components/Actions.js","components/Hand.js","components/Game.js","serviceWorker.js","index.js","components/Hand.module.scss"],"names":["module","exports","card","back","button","deck","reduce","accumulator","currentValue","Object","toConsumableArray","concat","Array","from","length","_","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","createReducer","reducerFunction","reducerName","state","action","player","undefined","combineReducers","hand","arguments","type","status","stake","redux_players","dealer","primary","replica","slice","players","coins","amount","game","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","thunk","getDefaultValue","Number","getTotals","sum","includes","getResult","isBust","every","n","some","checkBlackjack","getGameResult","_ref","WIN","DRAW","LOSE","playerTotals","playerResult","dealerTotals","dealerResult","byPlayer","blackjack","bust","byDealer","isFinite","playerTotal","max","apply","dealerTotal","compare","NaN","check","_ref2","_ref3","_ref4","hasReplica","_ref5","filter","_ref6","_ref7","_ref8","_ref9","_ref10","initGame","bet","resetGame","dispatch","getState","_getState$players","win","coin","getCoin","startGame","forEach","draw","stopGame","playerKey","_getState2","watch","split","_players$primary","Check","setStatus","_getState5","nextStake","connect","react_default","a","createElement","style","textAlign","Card","children","_ref$style","variant","onClick","className","classNames","Button","color","rest","objectWithoutProperties","assign","backgroundColor","disabled","canDraw","canSplit","canSurrender","bindActionCreators","gameActions","stay","actions","idle","playing","Boolean","stop","map","index","components_Button","key","totals","result","gameResult","isDealer","container","order","join","components_Card","Fragment","String","components_Actions","Game","_this$props","_this","props","isDealerTurn","hasGameFinished","setTimeout","this","playersKeys","components_Hand","components_Coins","Component","height","display","flexDirection","justifyContent","padding","keys","objectSpread","location","hostname","match","ReactDOM","render","es","store","components_Game","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b6614a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ySpGb\",\"back\":\"Card_back__3Nhc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__j85vl\"};","const deck = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\nconst reducer = (accumulator, currentValue) => [\n  ...accumulator,\n  ...Array.from({ length: 4 }, _ => currentValue)\n]\n\nexport default deck.reduce(reducer, [])\n","import deck from './deck'\nimport shuffle from './shuffle'\nexport default () => shuffle(deck)\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'draw':\n      return action.status || state\n\n    case 'stay':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst status = (state = 'idle', action) => {\n  switch (action.type) {\n    case 'start':\n      return 'playing'\n\n    case 'stop':\n      return 'stop'\n\n    case 'reset':\n      return 'idle'\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ status })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport coins from './coins'\nimport game from './game'\n\nexport default combineReducers({ deck, players, coins, game })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","export default (state = 100, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst InitialState = {\n  players: {\n    dealer: { hand: [] },\n    primary: { hand: [] }\n  }\n}\n\nexport default createStore(\n  reducer,\n  InitialState,\n  composeEnhancers(applyMiddleware(thunk))\n)\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\n\nexport const checkBlackjack = hand =>\n  hand.length === 2 && getTotals(hand).some(n => n === 21)\n\nexport default hand => {\n  const totals = getTotals(hand)\n  const isBust = totals.every(n => n > 21)\n  return checkBlackjack(hand) ? 'blackjack' : isBust ? 'bust' : ''\n}\n","import getTotals from './getTotals'\nimport getResult from './getResult'\nimport getDefaultValue from './getDefaultValue'\n\nexport default ({ player, dealer }) => {\n  const compare = () => {\n    const playerTotal = Math.max(...playerTotals)\n    const dealerTotal = Math.max(...dealerTotals)\n    return playerTotal > dealerTotal\n      ? WIN\n      : dealerTotal < playerTotal\n      ? DRAW\n      : LOSE\n  }\n\n  const BLACKJACK = 2.5\n  const WIN = 2\n  const DRAW = 1\n  const SURRENDER = 0.5\n  const LOSE = 0\n\n  const playerTotals = getTotals(player.hand)\n  const playerResult = getResult(player.hand)\n  const dealerTotals = getTotals(dealer.hand)\n  const dealerResult = getResult(dealer.hand)\n  const dealerWillNeverBlackjack = [1, 10].includes(\n    getDefaultValue(dealer.hand[0])\n  )\n\n  const byPlayer = {\n    blackjack: dealerWillNeverBlackjack && BLACKJACK,\n    bust: LOSE\n  }\n\n  const byDealer = {\n    blackjack: LOSE,\n    bust: WIN\n  }\n\n  return Number.isFinite(byPlayer[playerResult])\n    ? byPlayer[playerResult]\n    : Number.isFinite(byDealer[dealerResult])\n    ? byDealer[dealerResult]\n    : dealer.status === 'stay'\n    ? compare()\n    : player.status === 'surrender'\n    ? SURRENDER\n    : NaN\n}\n","import getTotals from './getTotals'\nimport getResult from './getResult'\nimport getGameResult from './getGameResult'\n\nexport default {\n  canPlayerDraw: ({ hand, status }) => !getResult(hand) && !status,\n  canPlayerSurrender: ({ hand, status }) => hand.length === 2 && !status,\n  shouldPlayerStay: ({ hand }) => getTotals(hand).some(n => n === 21),\n\n  canSplit: ({ primary, replica }) => {\n    const { hand, status } = primary\n    const hasReplica = !!replica.hand.length\n    return hand.length === 2 && hand[0] === hand[1] && !status && !hasReplica\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) =>\n    [primary, replica]\n      .filter(({ hand }) => hand.length)\n      .every(({ status }) => status === 'stay') &&\n    getTotals(dealer.hand).every(n => n <= 16) &&\n    dealer.status !== 'stay',\n\n  shouldDealerStay: ({ dealer, primary, replica }) =>\n    getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: ({ dealer, primary, replica }) =>\n    [primary, replica]\n      .filter(({ hand }) => hand.length)\n      .every(player => Number.isFinite(getGameResult({ player, dealer })))\n}\n","import Check from '../rules/check'\nimport getGameResult from '../rules/getGameResult'\n\nexport const initGame = () => bet('primary')\n\nexport const resetGame = () => (dispatch, getState) => {\n  const getCoin = player => player.stake * getGameResult({ player, dealer })\n  const reducer = (coin, player) => coin + getCoin(player)\n  const { dealer, primary, replica } = getState().players\n  const win = [primary, replica].reduce(reducer, 0)\n\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n  dispatch({ type: 'win', amount: win })\n  dispatch(bet('primary'))\n}\n\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const stopGame = () => (dispatch, getState) => {\n  dispatch({ type: 'stop' })\n}\n\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watch(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\nconst watch = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const shouldStay =\n    playerKey === 'dealer'\n      ? Check.shouldDealerStay(players)\n      : Check.shouldPlayerStay(players[playerKey])\n\n  shouldStay && dispatch(setStatus(playerKey, 'stay'))\n}\n\nexport const setStatus = (playerKey, status) => dispatch => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const bet = (playerKey, stake = 5) => (dispatch, getState) => {\n  const { players, coins } = getState()\n  const nextStake = (players[playerKey].stake || 0) + stake\n  const isValid = coins >= stake && nextStake >= 5\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nconst Coins = ({ coins }) => <p style={{ textAlign: 'center' }}>{coins}만원</p>\nexport default connect(({ coins }) => ({ coins }))(Coins)\n","import React from 'react'\nimport style from './Card.module.scss'\nimport classNames from 'classnames'\n\nconst Card = ({ back, children, style: variant = {}, onClick }) => (\n  <div\n    className={classNames(style.card, back && style.back)}\n    style={variant}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button\n    className={style.button}\n    style={{ backgroundColor: rest.disabled ? 'silver' : color }}\n    {...rest}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as gameActions from '../redux/gameActions'\nimport Check from '../rules/check'\nimport Button from './Button'\n\nconst Actions = ({ game, playerKey, stake, ...action }) => {\n  const draw = () => action.draw(playerKey)\n  const stay = () => action.setStatus(playerKey, 'stay')\n  const surrender = () => action.setStatus(playerKey, 'surrender')\n  const split = () => action.split()\n  const double = () => {\n    action.bet(playerKey, stake)\n    draw()\n    stay()\n  }\n\n  const bet = () => action.bet(playerKey, 5)\n  const minus = () => action.bet(playerKey, -5)\n  const startGame = () => action.startGame()\n  const resetGame = () => action.resetGame()\n\n  const { canDraw, canSurrender, canSplit } = action\n  const actions = {\n    idle: [\n      { color: 'green', children: '+', onClick: bet },\n      { color: 'brown', children: '-', onClick: minus },\n      { color: 'navy', children: '→', onClick: startGame }\n    ],\n    playing: [\n      { color: 'green', children: 'H', disabled: !canDraw, onClick: draw },\n      { color: 'brown', children: 'S', disabled: !canDraw, onClick: stay },\n      { color: 'navy', children: 'D', disabled: !canDraw, onClick: double },\n      canSplit && { color: 'olive', children: 'SP', onClick: split },\n      {\n        color: 'teal',\n        children: 'SU',\n        disabled: !canSurrender,\n        onClick: surrender\n      }\n    ].filter(Boolean),\n    stop: [{ color: 'navy', children: '✔︎', onClick: resetGame }]\n  }[game.status]\n\n  return (\n    <section>\n      {actions.map((action, index) => (\n        <Button {...action} key={index} />\n      ))}\n    </section>\n  )\n}\n\nexport default connect(\n  ({ players, game }, { playerKey }) => {\n    const player = players[playerKey]\n\n    return {\n      game,\n      stake: player.stake,\n      canDraw: Check.canPlayerDraw(player),\n      canSplit: Check.canSplit(players),\n      canSurrender:\n        !players['replica'].hand.length && Check.canPlayerSurrender(player)\n    }\n  },\n  dispatch => bindActionCreators(gameActions, dispatch)\n)(Actions)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport getTotals from '../rules/getTotals'\nimport getResult from '../rules/getResult'\nimport style from './Hand.module.scss'\nimport Card from './Card'\nimport Actions from './Actions'\nimport getGameResult from '../rules/getGameResult'\n\nconst Hand = ({\n  playerKey,\n  hand,\n  stake,\n  totals,\n  result,\n  isDealer,\n  gameResult\n}) => (\n  <div className={style.container}>\n    <p style={{ order: isDealer && 2 }}>{result}</p>\n\n    <section className={style.totals} style={{ order: isDealer && 1 }}>\n      {totals.filter(Boolean).join(', ')}\n    </section>\n\n    <ul className={style.deck}>\n      {hand.map((card, index) => (\n        <Card key={index}>{card}</Card>\n      ))}\n    </ul>\n\n    {!isDealer && (\n      <>\n        <p>{stake}만원</p>\n        {Number.isFinite(gameResult) && <p>{String(gameResult)}</p>}\n        <Actions playerKey={playerKey} />\n      </>\n    )}\n  </div>\n)\n\nexport default connect(({ players }, { playerKey }) => {\n  const player = players[playerKey]\n  const { dealer } = players\n  const { hand, stake } = player\n  return {\n    hand,\n    stake,\n    totals: getTotals(hand),\n    result: getResult(hand),\n    gameResult: getGameResult({ player, dealer }),\n    isDealer: playerKey === 'dealer'\n  }\n})(Hand)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as gameActions from '../redux/gameActions'\nimport Check from '../rules/check'\nimport Coins from './Coins'\nimport Hand from './Hand'\n\nclass Game extends Component {\n  componentDidMount() {\n    this.props.initGame()\n  }\n\n  componentDidUpdate() {\n    this.props.status === 'playing' && this.watch()\n  }\n\n  watch = () => {\n    const { isDealerTurn, draw, hasGameFinished, stopGame } = this.props\n    isDealerTurn && setTimeout(() => draw('dealer'), 500)\n    hasGameFinished && stopGame()\n  }\n\n  render() {\n    const { playersKeys } = this.props\n    return (\n      <main style={style}>\n        {playersKeys.map(key => (\n          <Hand playerKey={key} key={key} />\n        ))}\n        <Coins />\n      </main>\n    )\n  }\n}\n\nconst style = {\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  padding: 15\n}\n\nexport default connect(\n  ({ players, game }) => {\n    const playersKeys = Object.keys(players).filter(\n      key => key !== 'replica' || players[key].hand.length\n    )\n\n    return {\n      ...game,\n      playersKeys,\n      isDealerTurn: Check.shouldDealerDraw(players),\n      hasGameFinished: Check.hasGameFinished(players)\n    }\n  },\n  dispatch => bindActionCreators(gameActions, dispatch)\n)(Game)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './components/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hand_container__2U2je\",\"deck\":\"Hand_deck__1AbL5\",\"totals\":\"Hand_totals__2lwSK\"};"],"sourceRoot":""}