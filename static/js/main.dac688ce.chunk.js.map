{"version":3,"sources":["components/Card.module.scss","components/Button.module.scss","containers/Hand.module.scss","rules/deck.js","rules/getShuffledDeck.js","rules/shuffle.js","redux/createReducer.js","redux/player.js","redux/players.js","redux/game.js","redux/reducers.js","redux/deck.js","redux/coins.js","constants.js","store.js","rules/getDefaultValue.js","rules/getTotals.js","rules/getResult.js","rules/check.js","redux/actions.js","rules/getStatus.js","components/Button.js","components/Box.js","containers/Coins.js","components/Card.js","containers/Hand.js","containers/Result.js","containers/Actions.js","containers/Player.js","containers/Game.js","serviceWorker.js","index.js","components/Box.module.scss","containers/Player.module.scss"],"names":["module","exports","card","back","button","hand","deck","reduce","accumulator","currentValue","Object","toConsumableArray","concat","Array","from","length","_","getShuffledDeck","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","createReducer","reducerFunction","reducerName","state","action","player","undefined","combineReducers","arguments","type","status","stake","redux_players","dealer","primary","replica","slice","players","coins","amount","game","objectSpread","INITIAL","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","reducer","getDefaultValue","Number","getTotals","sum","includes","getResult","playerKey","byPlayer","blackjack","bust","surrender","byDealer","playerTotal","max","apply","dealerTotal","compare","prize","BLACKJACK","WIN","DRAW","SURRENDER","LOSE","getReturn","result","isInit","_ref","check","_ref2","_ref3","_ref4","hasReplica","_ref5","every","n","filter","_ref6","_ref7","_ref8","some","startGame","dispatch","getState","forEach","draw","resetGame","bet","win","coin","getTotalReturn","_getState4","watchPlayer","set","double","split","_players$primary","totals","is21","isBust","isBlackjack","isStay","getStatus","Button","color","children","rest","objectWithoutProperties","react_default","a","createElement","assign","className","style","backgroundColor","disabled","Box","title","box","content","connect","components_Box","String","Card","_ref$style","variant","onClick","classNames","containers_Hand","canDraw","bindActionCreators","actions","cursor","map","index","components_Card","key","fontSize","fontWeight","canReplicaAction","canBet","canBet10","canMinus","canPlay","canDouble","canSplit","canSurrender","idle","playing","Boolean","components_Button","isDealer","container","order","join","Fragment","containers_Result","containers_Actions","display","flexDirection","justifyContent","alignItems","height","maxHeight","maxWidth","marginLeft","marginRight","padding","lineHeight","textAlign","alignSelf","showFinishButton","playersKeys","containers_Player","containers_Coins","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","containers_Game","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dac688ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ySpGb\",\"back\":\"Card_back__3Nhc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__j85vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hand\":\"Hand_hand__36MzW\"};","const deck = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\nconst reducer = (accumulator, currentValue) => [\n  ...accumulator,\n  ...Array.from({ length: 4 }, _ => currentValue)\n]\n\nexport default deck.reduce(reducer, [])\n","import deck from './deck'\nimport shuffle from './shuffle'\nexport default () => shuffle(deck)\n","/* Fisher–Yates Shuffle */\nexport default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex\n\n  while (currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex--)\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n\n  return array\n}\n","export default (reducerFunction, reducerName) => (state, action) => {\n  const { player } = action\n  const isInitializationCall = state === undefined\n  return player !== reducerName && !isInitializationCall\n    ? state\n    : reducerFunction(state, action)\n}\n","import { combineReducers } from 'redux'\n\nconst hand = (state = [], action) => {\n  switch (action.type) {\n    case 'draw':\n    case 'hand':\n      return action.hand\n\n    case 'reset':\n      return []\n\n    default:\n      return state\n  }\n}\n\nconst status = (state = '', action) => {\n  switch (action.type) {\n    case 'stay':\n    case 'bust':\n    case 'blackjack':\n    case 'surrender':\n      return action.type\n\n    case 'reset':\n      return ''\n\n    default:\n      return state\n  }\n}\n\nconst stake = (state = 0, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state + action.stake\n\n    case 'reset':\n      return 0\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ hand, status, stake })\n","import { combineReducers } from 'redux'\nimport createReducer from './createReducer'\nimport player from './player'\n\nexport default combineReducers({\n  dealer: createReducer(player, 'dealer'),\n  primary: createReducer(player, 'primary'),\n  replica: createReducer(player, 'replica')\n})\n","import { combineReducers } from 'redux'\n\nconst status = (state = 'idle', action) => {\n  switch (action.type) {\n    case 'start':\n      return 'playing'\n\n    case 'reset':\n      return 'idle'\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ status })\n","import { combineReducers } from 'redux'\nimport deck from './deck'\nimport players from './players'\nimport coins from './coins'\nimport game from './game'\n\nexport default combineReducers({ deck, players, coins, game })\n","import getShuffledDeck from '../rules/getShuffledDeck'\n\nexport default (state = getShuffledDeck(), action) => {\n  switch (action.type) {\n    case 'reset':\n      return getShuffledDeck()\n\n    case 'draw':\n      return state.slice(1)\n\n    default:\n      return state\n  }\n}\n","export default (state = 100, action) => {\n  switch (action.type) {\n    case 'bet':\n      return state - action.stake\n\n    case 'win':\n      return state + action.amount\n\n    default:\n      return state\n  }\n}\n","const deck = undefined\nconst player = { stake: 0, status: '', hand: [] }\nconst players = {\n  dealer: { ...player, hand: [] },\n  primary: { ...player, hand: [] }\n}\n\nexport const MIN = 5\nexport const INITIAL = { deck, players }\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './redux/reducers'\nimport { INITIAL } from './constants'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nexport default createStore(reducer, INITIAL, enhancer)\n","export default card => Number(card) || (card === 'A' && 1) || 10\n","import getDefaultValue from './getDefaultValue'\n\nexport default hand => {\n  const sum = hand.reduce((sum, card) => sum + getDefaultValue(card), 0)\n  const hasAce = hand.includes('A')\n  return hasAce && sum + 10 <= 21 ? [sum, sum + 10] : [sum]\n}\n","import getTotals from './getTotals'\nimport getDefaultValue from './getDefaultValue'\n\nexport const getResult = (players, playerKey) => {\n  const compare = () => {\n    const playerTotal = Math.max(...getTotals(player.hand))\n    const dealerTotal = Math.max(...getTotals(dealer.hand))\n    return playerTotal > dealerTotal\n      ? 'WIN'\n      : dealerTotal > playerTotal\n      ? 'LOSE'\n      : 'DRAW'\n  }\n\n  const { dealer } = players\n  const player = players[playerKey]\n  const dealerWillNeverBlackjack = ![1, 10].includes(\n    getDefaultValue(dealer.hand[0])\n  )\n\n  const byPlayer = {\n    blackjack: dealerWillNeverBlackjack && 'BLACKJACK',\n    bust: 'LOSE',\n    surrender: 'SURRENDER'\n  }\n\n  const byDealer = {\n    blackjack: player.status === 'blackjack' ? 'DRAW' : 'LOSE',\n    bust: 'WIN'\n  }\n\n  return (\n    byPlayer[player.status] ||\n    byDealer[dealer.status] ||\n    (dealer.status === 'stay' ? compare() : '')\n  )\n}\n\nconst prize = { BLACKJACK: 2.5, WIN: 2, DRAW: 1, SURRENDER: 0.5, LOSE: 0 }\nexport const getReturn = (players, playerKey) => {\n  const result = getResult(players, playerKey)\n  return players[playerKey].stake * (prize[result] || 0)\n}\n\nexport const getTotalReturn = players => {\n  const reducer = (coin, playerKey) => coin + getReturn(players, playerKey)\n  return ['primary', 'replica'].reduce(reducer, 0)\n}\n\nexport default getResult\n","import getTotals from './getTotals'\nimport getResult from './getResult'\n\nconst isInit = ({ hand, status }) => hand.length === 2 && !status\n\nexport default {\n  canPlayerDraw: ({ status }) => !status,\n\n  canPlayerDouble: ({ player, coins }) =>\n    isInit(player) && coins >= player.stake,\n\n  canPlayerSurrender: player => isInit(player),\n\n  canSplit: ({ players, coins }) => {\n    const { primary, replica } = players\n    const hasReplica = !!replica.hand.length\n    return (\n      isInit(primary) &&\n      coins >= primary.stake &&\n      primary.hand[0] === primary.hand[1] &&\n      !hasReplica\n    )\n  },\n\n  shouldDealerDraw: ({ dealer, primary, replica }) => {\n    const { status, hand } = dealer\n    return (\n      !status &&\n      getTotals(hand).every(n => n <= 16) &&\n      [primary, replica]\n        .filter(({ hand }) => hand.length)\n        .every(({ status }) => status)\n    )\n  },\n\n  shouldDealerStay: ({ dealer }) =>\n    !dealer.status && getTotals(dealer.hand).some(n => n >= 17),\n\n  hasGameFinished: players =>\n    ['primary', 'replica']\n      .filter(playerKey => players[playerKey].hand.length)\n      .every(playerKey => getResult(players, playerKey))\n}\n","import getStatus from '../rules/getStatus'\nimport { getTotalReturn } from '../rules/getResult'\nimport { MIN } from '../constants'\n\n/* Game */\nexport const startGame = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'start' })\n  Array.from({ length: 2 - players['primary'].hand.length }).forEach(() =>\n    dispatch(draw('primary'))\n  )\n  !players['dealer'].hand.length && dispatch(draw('dealer'))\n}\n\nexport const resetGame = () => (dispatch, getState) => {\n  dispatch({ type: 'reset', player: 'dealer' })\n  dispatch({ type: 'reset', player: 'primary' })\n  dispatch({ type: 'reset', player: 'replica' })\n}\n\n/* Bet */\nexport const bet = (playerKey, stake = MIN) => (dispatch, getState) => {\n  const { coins } = getState()\n  const isValid = coins >= stake\n  isValid && dispatch({ type: 'bet', player: playerKey, stake })\n}\n\nexport const win = () => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch({ type: 'win', amount: getTotalReturn(players) })\n}\n\n/* Player */\nexport const draw = playerKey => (dispatch, getState) => {\n  const { deck, players } = getState()\n  const player = players[playerKey]\n  const card = deck[0]\n  const hand = [...player.hand, card]\n  dispatch({ type: 'draw', player: playerKey, hand })\n  dispatch(watchPlayer(playerKey))\n}\n\nexport const set = (playerKey, status) => (dispatch, getState) => {\n  dispatch({ type: status, player: playerKey })\n}\n\nexport const double = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  dispatch(bet(playerKey, players[playerKey].stake))\n  dispatch(set(playerKey, 'stay'))\n  dispatch(draw(playerKey))\n}\n\nexport const split = () => (dispatch, getState) => {\n  const { players } = getState()\n  const { hand, stake } = players['primary']\n  const card = hand[0]\n  dispatch({ type: 'hand', player: 'primary', hand: [card] })\n  dispatch({ type: 'hand', player: 'replica', hand: [card] })\n  dispatch({ type: 'bet', player: 'replica', stake })\n}\n\n/* Watch */\nconst watchPlayer = playerKey => (dispatch, getState) => {\n  const { players } = getState()\n  const status = getStatus(players, playerKey)\n  status && dispatch(set(playerKey, status))\n}\n","import check from '../rules/check'\nimport getTotals from './getTotals'\n\nexport default (players, playerKey) => {\n  const { hand } = players[playerKey]\n  const totals = getTotals(hand)\n  const is21 = totals.some(n => n === 21)\n  const isBust = totals.every(n => n > 21)\n  const isBlackjack = is21 && hand.length === 2\n  const isStay = playerKey === 'dealer' && check.shouldDealerStay(players)\n  return is21\n    ? isBlackjack\n      ? 'blackjack'\n      : 'stay'\n    : isBust\n    ? 'bust'\n    : isStay\n    ? 'stay'\n    : ''\n}\n","import React from 'react'\nimport style from './Button.module.scss'\n\nconst Button = ({ color, children, ...rest }) => (\n  <button\n    className={style.button}\n    style={{ backgroundColor: rest.disabled ? 'silver' : color }}\n    {...rest}\n  >\n    {children}\n  </button>\n)\n\nexport default Button\n","import React from 'react'\nimport style from './Box.module.scss'\n\nconst Box = ({ title, children }) => (\n  <div className={style.box}>\n    {title && <h1 className={style.title}>{title}</h1>}\n    <p className={style.content}>{children}</p>\n  </div>\n)\n\nexport default Box\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Box from '../components/Box'\n\nconst Coins = ({ coins }) => <Box>{String(coins)}</Box>\nexport default connect(({ coins }) => ({ coins }))(Coins)\n","import React from 'react'\nimport style from './Card.module.scss'\nimport classNames from 'classnames'\n\nconst Card = ({ back, children, style: variant = {}, onClick }) => (\n  <div\n    className={classNames(style.card, back && style.back)}\n    style={variant}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n)\n\nexport default Card\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport style from './Hand.module.scss'\nimport Card from '../components/Card'\n\nconst Hand = ({ hand, onClick }) => (\n  <ul\n    className={style.hand}\n    style={{ cursor: onClick && 'pointer' }}\n    onClick={onClick}\n  >\n    {hand.map((card, index) => (\n      <Card key={index}>{card}</Card>\n    ))}\n\n    {onClick && <Card back>+</Card>}\n  </ul>\n)\n\nexport default connect(\n  ({ players }, { playerKey }) => {\n    const { hand } = players[playerKey]\n    const canDraw =\n      playerKey === 'dealer' &&\n      !check.hasGameFinished(players) &&\n      check.shouldDealerDraw(players)\n    return { hand, canDraw }\n  },\n  dispatch => bindActionCreators(actions, dispatch),\n  ({ hand, canDraw }, { draw }, { playerKey }) =>\n    Object.assign({ hand }, canDraw && { onClick: () => draw(playerKey) })\n)(Hand)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport getResult, { getReturn } from '../rules/getResult'\n\nconst Result = ({ result, color }) =>\n  result ? (\n    <p style={{ color, fontSize: '200%', fontWeight: 'bold' }}>{result}</p>\n  ) : null\n\nexport default connect(({ players }, { playerKey }) => {\n  const result = getResult(players, playerKey)\n  const prize = getReturn(players, playerKey)\n  const color = prize ? 'green' : 'red'\n  return { result, color }\n})(Result)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport Button from '../components/Button'\nimport { MIN } from '../constants'\n\nconst Actions = ({ players, game, playerKey, stake, ...action }) => {\n  const bet = () => action.bet(playerKey, MIN)\n  const bet10 = () => action.bet(playerKey, 10)\n  const minus = () => action.bet(playerKey, -1 * MIN)\n  const startGame = () => action.startGame()\n\n  const draw = () => action.draw(playerKey)\n  const stay = () => action.set(playerKey, 'stay')\n  const double = () => action.double(playerKey)\n  const surrender = () => action.set(playerKey, 'surrender')\n  const split = () => action.split()\n\n  const { canBet, canBet10, canMinus, canPlay } = action\n  const { canDraw, canDouble, canSurrender, canSplit } = action\n  const actions =\n    {\n      idle: [\n        { color: 'green', children: '++', disabled: !canBet10, onClick: bet10 },\n        { color: 'green', children: '+', disabled: !canBet, onClick: bet },\n        { color: 'brown', children: '-', disabled: !canMinus, onClick: minus },\n        { color: 'navy', children: '→', disabled: !canPlay, onClick: startGame }\n      ],\n      playing: [\n        { color: 'green', children: 'H', disabled: !canDraw, onClick: draw },\n        { color: 'brown', children: 'S', disabled: !canDraw, onClick: stay },\n        canDouble && { color: 'navy', children: 'D', onClick: double },\n        canSplit && { color: 'olive', children: 'SP', onClick: split },\n        canSurrender && { color: 'teal', children: 'SU', onClick: surrender }\n      ].filter(Boolean)\n    }[game.status] || []\n\n  return (\n    <section>\n      {actions.map((action, index) => (\n        <Button {...action} key={index} />\n      ))}\n    </section>\n  )\n}\n\nexport default connect(\n  ({ players, game, coins }, { playerKey }) => {\n    const player = players[playerKey]\n    const canReplicaAction =\n      playerKey !== 'replica' || !!players['primary'].status\n\n    return {\n      players,\n      game,\n      stake: player.stake,\n      canBet: coins >= MIN,\n      canBet10: coins >= 10,\n      canMinus: player.stake > MIN,\n      canPlay: !!player.stake,\n      canDraw: canReplicaAction && check.canPlayerDraw(player),\n      canDouble: canReplicaAction && check.canPlayerDouble({ player, coins }),\n      canSplit: canReplicaAction && check.canSplit({ players, coins }),\n      canSurrender:\n        canReplicaAction &&\n        !players['replica'].hand.length &&\n        check.canPlayerSurrender(player)\n    }\n  },\n  dispatch => bindActionCreators(actions, dispatch)\n)(Actions)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport getTotals from '../rules/getTotals'\nimport style from './Player.module.scss'\nimport Box from '../components/Box'\nimport Hand from './Hand'\nimport Result from './Result'\nimport Actions from './Actions'\n\nconst Player = ({ playerKey, stake, totals, status, isDealer }) => (\n  <div className={style.container}>\n    <p className={style.status} style={{ order: isDealer && 2 }}>\n      {status}\n    </p>\n\n    <section className={style.totals} style={{ order: isDealer && 1 }}>\n      {totals.filter(Boolean).join(', ')}\n    </section>\n    <Hand playerKey={playerKey} />\n\n    {!isDealer && (\n      <>\n        <Box>{stake}</Box>\n        <Result playerKey={playerKey} />\n        <Actions playerKey={playerKey} />\n      </>\n    )}\n  </div>\n)\n\nexport default connect(({ players }, { playerKey }) => {\n  const player = players[playerKey]\n  const isDealer = playerKey === 'dealer'\n  return { ...player, totals: getTotals(player.hand), isDealer }\n})(Player)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../redux/actions'\nimport check from '../rules/check'\nimport Button from '../components/Button'\nimport Coins from './Coins'\nimport Player from './Player'\n\nconst Game = ({ playersKeys, showFinishButton, win, resetGame }) => {\n  const handleClick = () => {\n    win()\n    resetGame()\n  }\n\n  return (\n    <main style={style}>\n      <Player playerKey=\"dealer\" />\n\n      <div style={playersKeys.length > 1 ? style.players : {}}>\n        {playersKeys.map(key => (\n          <Player playerKey={key} key={key} />\n        ))}\n      </div>\n\n      {showFinishButton && (\n        <Button color=\"navy\" onClick={handleClick}>\n          ✔︎\n        </Button>\n      )}\n\n      <Coins />\n    </main>\n  )\n}\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n\n  height: '100%',\n  maxHeight: 800,\n  maxWidth: 540,\n\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  padding: 15,\n  lineHeight: 1.6,\n  textAlign: 'center',\n\n  players: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'flex-end',\n    alignSelf: 'stretch'\n  }\n}\n\nexport default connect(\n  ({ players, game }) => ({\n    showFinishButton:\n      game.status === 'playing' && check.hasGameFinished(players),\n    playersKeys: [\n      players['replica'].hand.length && 'replica',\n      'primary'\n    ].filter(Boolean)\n  }),\n  dispatch => bindActionCreators(actions, dispatch)\n)(Game)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.scss'\nimport Game from './containers/Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__3aPqL\",\"title\":\"Box_title__1nlTm\",\"content\":\"Box_content__3HYIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Player_container__2J_vY\",\"totals\":\"Player_totals__3-VM_\",\"status\":\"Player_status__R_Y4f\"};"],"sourceRoot":""}